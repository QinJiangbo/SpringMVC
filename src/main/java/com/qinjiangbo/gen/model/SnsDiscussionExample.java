package com.qinjiangbo.gen.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class SnsDiscussionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sns_discussion
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sns_discussion
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sns_discussion
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sns_discussion
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public SnsDiscussionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sns_discussion
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sns_discussion
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sns_discussion
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sns_discussion
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sns_discussion
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sns_discussion
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sns_discussion
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sns_discussion
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sns_discussion
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sns_discussion
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sns_discussion
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDiscussionIdIsNull() {
            addCriterion("discussion_id is null");
            return (Criteria) this;
        }

        public Criteria andDiscussionIdIsNotNull() {
            addCriterion("discussion_id is not null");
            return (Criteria) this;
        }

        public Criteria andDiscussionIdEqualTo(Long value) {
            addCriterion("discussion_id =", value, "discussionId");
            return (Criteria) this;
        }

        public Criteria andDiscussionIdNotEqualTo(Long value) {
            addCriterion("discussion_id <>", value, "discussionId");
            return (Criteria) this;
        }

        public Criteria andDiscussionIdGreaterThan(Long value) {
            addCriterion("discussion_id >", value, "discussionId");
            return (Criteria) this;
        }

        public Criteria andDiscussionIdGreaterThanOrEqualTo(Long value) {
            addCriterion("discussion_id >=", value, "discussionId");
            return (Criteria) this;
        }

        public Criteria andDiscussionIdLessThan(Long value) {
            addCriterion("discussion_id <", value, "discussionId");
            return (Criteria) this;
        }

        public Criteria andDiscussionIdLessThanOrEqualTo(Long value) {
            addCriterion("discussion_id <=", value, "discussionId");
            return (Criteria) this;
        }

        public Criteria andDiscussionIdIn(List<Long> values) {
            addCriterion("discussion_id in", values, "discussionId");
            return (Criteria) this;
        }

        public Criteria andDiscussionIdNotIn(List<Long> values) {
            addCriterion("discussion_id not in", values, "discussionId");
            return (Criteria) this;
        }

        public Criteria andDiscussionIdBetween(Long value1, Long value2) {
            addCriterion("discussion_id between", value1, value2, "discussionId");
            return (Criteria) this;
        }

        public Criteria andDiscussionIdNotBetween(Long value1, Long value2) {
            addCriterion("discussion_id not between", value1, value2, "discussionId");
            return (Criteria) this;
        }

        public Criteria andTopicIdIsNull() {
            addCriterion("topic_id is null");
            return (Criteria) this;
        }

        public Criteria andTopicIdIsNotNull() {
            addCriterion("topic_id is not null");
            return (Criteria) this;
        }

        public Criteria andTopicIdEqualTo(Long value) {
            addCriterion("topic_id =", value, "topicId");
            return (Criteria) this;
        }

        public Criteria andTopicIdNotEqualTo(Long value) {
            addCriterion("topic_id <>", value, "topicId");
            return (Criteria) this;
        }

        public Criteria andTopicIdGreaterThan(Long value) {
            addCriterion("topic_id >", value, "topicId");
            return (Criteria) this;
        }

        public Criteria andTopicIdGreaterThanOrEqualTo(Long value) {
            addCriterion("topic_id >=", value, "topicId");
            return (Criteria) this;
        }

        public Criteria andTopicIdLessThan(Long value) {
            addCriterion("topic_id <", value, "topicId");
            return (Criteria) this;
        }

        public Criteria andTopicIdLessThanOrEqualTo(Long value) {
            addCriterion("topic_id <=", value, "topicId");
            return (Criteria) this;
        }

        public Criteria andTopicIdIn(List<Long> values) {
            addCriterion("topic_id in", values, "topicId");
            return (Criteria) this;
        }

        public Criteria andTopicIdNotIn(List<Long> values) {
            addCriterion("topic_id not in", values, "topicId");
            return (Criteria) this;
        }

        public Criteria andTopicIdBetween(Long value1, Long value2) {
            addCriterion("topic_id between", value1, value2, "topicId");
            return (Criteria) this;
        }

        public Criteria andTopicIdNotBetween(Long value1, Long value2) {
            addCriterion("topic_id not between", value1, value2, "topicId");
            return (Criteria) this;
        }

        public Criteria andTopicTypeIsNull() {
            addCriterion("topic_type is null");
            return (Criteria) this;
        }

        public Criteria andTopicTypeIsNotNull() {
            addCriterion("topic_type is not null");
            return (Criteria) this;
        }

        public Criteria andTopicTypeEqualTo(Integer value) {
            addCriterion("topic_type =", value, "topicType");
            return (Criteria) this;
        }

        public Criteria andTopicTypeNotEqualTo(Integer value) {
            addCriterion("topic_type <>", value, "topicType");
            return (Criteria) this;
        }

        public Criteria andTopicTypeGreaterThan(Integer value) {
            addCriterion("topic_type >", value, "topicType");
            return (Criteria) this;
        }

        public Criteria andTopicTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("topic_type >=", value, "topicType");
            return (Criteria) this;
        }

        public Criteria andTopicTypeLessThan(Integer value) {
            addCriterion("topic_type <", value, "topicType");
            return (Criteria) this;
        }

        public Criteria andTopicTypeLessThanOrEqualTo(Integer value) {
            addCriterion("topic_type <=", value, "topicType");
            return (Criteria) this;
        }

        public Criteria andTopicTypeIn(List<Integer> values) {
            addCriterion("topic_type in", values, "topicType");
            return (Criteria) this;
        }

        public Criteria andTopicTypeNotIn(List<Integer> values) {
            addCriterion("topic_type not in", values, "topicType");
            return (Criteria) this;
        }

        public Criteria andTopicTypeBetween(Integer value1, Integer value2) {
            addCriterion("topic_type between", value1, value2, "topicType");
            return (Criteria) this;
        }

        public Criteria andTopicTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("topic_type not between", value1, value2, "topicType");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Long value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Long value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Long value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Long value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Long value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Long> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Long> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Long value1, Long value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Long value1, Long value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andDisContentIsNull() {
            addCriterion("dis_content is null");
            return (Criteria) this;
        }

        public Criteria andDisContentIsNotNull() {
            addCriterion("dis_content is not null");
            return (Criteria) this;
        }

        public Criteria andDisContentEqualTo(String value) {
            addCriterion("dis_content =", value, "disContent");
            return (Criteria) this;
        }

        public Criteria andDisContentNotEqualTo(String value) {
            addCriterion("dis_content <>", value, "disContent");
            return (Criteria) this;
        }

        public Criteria andDisContentGreaterThan(String value) {
            addCriterion("dis_content >", value, "disContent");
            return (Criteria) this;
        }

        public Criteria andDisContentGreaterThanOrEqualTo(String value) {
            addCriterion("dis_content >=", value, "disContent");
            return (Criteria) this;
        }

        public Criteria andDisContentLessThan(String value) {
            addCriterion("dis_content <", value, "disContent");
            return (Criteria) this;
        }

        public Criteria andDisContentLessThanOrEqualTo(String value) {
            addCriterion("dis_content <=", value, "disContent");
            return (Criteria) this;
        }

        public Criteria andDisContentLike(String value) {
            addCriterion("dis_content like", value, "disContent");
            return (Criteria) this;
        }

        public Criteria andDisContentNotLike(String value) {
            addCriterion("dis_content not like", value, "disContent");
            return (Criteria) this;
        }

        public Criteria andDisContentIn(List<String> values) {
            addCriterion("dis_content in", values, "disContent");
            return (Criteria) this;
        }

        public Criteria andDisContentNotIn(List<String> values) {
            addCriterion("dis_content not in", values, "disContent");
            return (Criteria) this;
        }

        public Criteria andDisContentBetween(String value1, String value2) {
            addCriterion("dis_content between", value1, value2, "disContent");
            return (Criteria) this;
        }

        public Criteria andDisContentNotBetween(String value1, String value2) {
            addCriterion("dis_content not between", value1, value2, "disContent");
            return (Criteria) this;
        }

        public Criteria andIdReplyIsNull() {
            addCriterion("id_reply is null");
            return (Criteria) this;
        }

        public Criteria andIdReplyIsNotNull() {
            addCriterion("id_reply is not null");
            return (Criteria) this;
        }

        public Criteria andIdReplyEqualTo(Long value) {
            addCriterion("id_reply =", value, "idReply");
            return (Criteria) this;
        }

        public Criteria andIdReplyNotEqualTo(Long value) {
            addCriterion("id_reply <>", value, "idReply");
            return (Criteria) this;
        }

        public Criteria andIdReplyGreaterThan(Long value) {
            addCriterion("id_reply >", value, "idReply");
            return (Criteria) this;
        }

        public Criteria andIdReplyGreaterThanOrEqualTo(Long value) {
            addCriterion("id_reply >=", value, "idReply");
            return (Criteria) this;
        }

        public Criteria andIdReplyLessThan(Long value) {
            addCriterion("id_reply <", value, "idReply");
            return (Criteria) this;
        }

        public Criteria andIdReplyLessThanOrEqualTo(Long value) {
            addCriterion("id_reply <=", value, "idReply");
            return (Criteria) this;
        }

        public Criteria andIdReplyIn(List<Long> values) {
            addCriterion("id_reply in", values, "idReply");
            return (Criteria) this;
        }

        public Criteria andIdReplyNotIn(List<Long> values) {
            addCriterion("id_reply not in", values, "idReply");
            return (Criteria) this;
        }

        public Criteria andIdReplyBetween(Long value1, Long value2) {
            addCriterion("id_reply between", value1, value2, "idReply");
            return (Criteria) this;
        }

        public Criteria andIdReplyNotBetween(Long value1, Long value2) {
            addCriterion("id_reply not between", value1, value2, "idReply");
            return (Criteria) this;
        }

        public Criteria andTimeDiscussionIsNull() {
            addCriterion("time_discussion is null");
            return (Criteria) this;
        }

        public Criteria andTimeDiscussionIsNotNull() {
            addCriterion("time_discussion is not null");
            return (Criteria) this;
        }

        public Criteria andTimeDiscussionEqualTo(Date value) {
            addCriterion("time_discussion =", value, "timeDiscussion");
            return (Criteria) this;
        }

        public Criteria andTimeDiscussionNotEqualTo(Date value) {
            addCriterion("time_discussion <>", value, "timeDiscussion");
            return (Criteria) this;
        }

        public Criteria andTimeDiscussionGreaterThan(Date value) {
            addCriterion("time_discussion >", value, "timeDiscussion");
            return (Criteria) this;
        }

        public Criteria andTimeDiscussionGreaterThanOrEqualTo(Date value) {
            addCriterion("time_discussion >=", value, "timeDiscussion");
            return (Criteria) this;
        }

        public Criteria andTimeDiscussionLessThan(Date value) {
            addCriterion("time_discussion <", value, "timeDiscussion");
            return (Criteria) this;
        }

        public Criteria andTimeDiscussionLessThanOrEqualTo(Date value) {
            addCriterion("time_discussion <=", value, "timeDiscussion");
            return (Criteria) this;
        }

        public Criteria andTimeDiscussionIn(List<Date> values) {
            addCriterion("time_discussion in", values, "timeDiscussion");
            return (Criteria) this;
        }

        public Criteria andTimeDiscussionNotIn(List<Date> values) {
            addCriterion("time_discussion not in", values, "timeDiscussion");
            return (Criteria) this;
        }

        public Criteria andTimeDiscussionBetween(Date value1, Date value2) {
            addCriterion("time_discussion between", value1, value2, "timeDiscussion");
            return (Criteria) this;
        }

        public Criteria andTimeDiscussionNotBetween(Date value1, Date value2) {
            addCriterion("time_discussion not between", value1, value2, "timeDiscussion");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateIsNull() {
            addCriterion("time_update is null");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateIsNotNull() {
            addCriterion("time_update is not null");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateEqualTo(Date value) {
            addCriterion("time_update =", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateNotEqualTo(Date value) {
            addCriterion("time_update <>", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateGreaterThan(Date value) {
            addCriterion("time_update >", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateGreaterThanOrEqualTo(Date value) {
            addCriterion("time_update >=", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateLessThan(Date value) {
            addCriterion("time_update <", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateLessThanOrEqualTo(Date value) {
            addCriterion("time_update <=", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateIn(List<Date> values) {
            addCriterion("time_update in", values, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateNotIn(List<Date> values) {
            addCriterion("time_update not in", values, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateBetween(Date value1, Date value2) {
            addCriterion("time_update between", value1, value2, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateNotBetween(Date value1, Date value2) {
            addCriterion("time_update not between", value1, value2, "timeUpdate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sns_discussion
     *
     * @mbggenerated do_not_delete_during_merge Tue Jun 21 00:00:04 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sns_discussion
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}
package com.qinjiangbo.gen.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class BasStuExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bas_stu
     *
     * @mbggenerated Tue Jun 21 00:00:03 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bas_stu
     *
     * @mbggenerated Tue Jun 21 00:00:03 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bas_stu
     *
     * @mbggenerated Tue Jun 21 00:00:03 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_stu
     *
     * @mbggenerated Tue Jun 21 00:00:03 CST 2016
     */
    public BasStuExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_stu
     *
     * @mbggenerated Tue Jun 21 00:00:03 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_stu
     *
     * @mbggenerated Tue Jun 21 00:00:03 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_stu
     *
     * @mbggenerated Tue Jun 21 00:00:03 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_stu
     *
     * @mbggenerated Tue Jun 21 00:00:03 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_stu
     *
     * @mbggenerated Tue Jun 21 00:00:03 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_stu
     *
     * @mbggenerated Tue Jun 21 00:00:03 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_stu
     *
     * @mbggenerated Tue Jun 21 00:00:03 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_stu
     *
     * @mbggenerated Tue Jun 21 00:00:03 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_stu
     *
     * @mbggenerated Tue Jun 21 00:00:03 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bas_stu
     *
     * @mbggenerated Tue Jun 21 00:00:03 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bas_stu
     *
     * @mbggenerated Tue Jun 21 00:00:03 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andStuIdIsNull() {
            addCriterion("stu_id is null");
            return (Criteria) this;
        }

        public Criteria andStuIdIsNotNull() {
            addCriterion("stu_id is not null");
            return (Criteria) this;
        }

        public Criteria andStuIdEqualTo(Long value) {
            addCriterion("stu_id =", value, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdNotEqualTo(Long value) {
            addCriterion("stu_id <>", value, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdGreaterThan(Long value) {
            addCriterion("stu_id >", value, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdGreaterThanOrEqualTo(Long value) {
            addCriterion("stu_id >=", value, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdLessThan(Long value) {
            addCriterion("stu_id <", value, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdLessThanOrEqualTo(Long value) {
            addCriterion("stu_id <=", value, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdIn(List<Long> values) {
            addCriterion("stu_id in", values, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdNotIn(List<Long> values) {
            addCriterion("stu_id not in", values, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdBetween(Long value1, Long value2) {
            addCriterion("stu_id between", value1, value2, "stuId");
            return (Criteria) this;
        }

        public Criteria andStuIdNotBetween(Long value1, Long value2) {
            addCriterion("stu_id not between", value1, value2, "stuId");
            return (Criteria) this;
        }

        public Criteria andSchNameIsNull() {
            addCriterion("sch_name is null");
            return (Criteria) this;
        }

        public Criteria andSchNameIsNotNull() {
            addCriterion("sch_name is not null");
            return (Criteria) this;
        }

        public Criteria andSchNameEqualTo(String value) {
            addCriterion("sch_name =", value, "schName");
            return (Criteria) this;
        }

        public Criteria andSchNameNotEqualTo(String value) {
            addCriterion("sch_name <>", value, "schName");
            return (Criteria) this;
        }

        public Criteria andSchNameGreaterThan(String value) {
            addCriterion("sch_name >", value, "schName");
            return (Criteria) this;
        }

        public Criteria andSchNameGreaterThanOrEqualTo(String value) {
            addCriterion("sch_name >=", value, "schName");
            return (Criteria) this;
        }

        public Criteria andSchNameLessThan(String value) {
            addCriterion("sch_name <", value, "schName");
            return (Criteria) this;
        }

        public Criteria andSchNameLessThanOrEqualTo(String value) {
            addCriterion("sch_name <=", value, "schName");
            return (Criteria) this;
        }

        public Criteria andSchNameLike(String value) {
            addCriterion("sch_name like", value, "schName");
            return (Criteria) this;
        }

        public Criteria andSchNameNotLike(String value) {
            addCriterion("sch_name not like", value, "schName");
            return (Criteria) this;
        }

        public Criteria andSchNameIn(List<String> values) {
            addCriterion("sch_name in", values, "schName");
            return (Criteria) this;
        }

        public Criteria andSchNameNotIn(List<String> values) {
            addCriterion("sch_name not in", values, "schName");
            return (Criteria) this;
        }

        public Criteria andSchNameBetween(String value1, String value2) {
            addCriterion("sch_name between", value1, value2, "schName");
            return (Criteria) this;
        }

        public Criteria andSchNameNotBetween(String value1, String value2) {
            addCriterion("sch_name not between", value1, value2, "schName");
            return (Criteria) this;
        }

        public Criteria andGradeIsNull() {
            addCriterion("grade is null");
            return (Criteria) this;
        }

        public Criteria andGradeIsNotNull() {
            addCriterion("grade is not null");
            return (Criteria) this;
        }

        public Criteria andGradeEqualTo(String value) {
            addCriterion("grade =", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeNotEqualTo(String value) {
            addCriterion("grade <>", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeGreaterThan(String value) {
            addCriterion("grade >", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeGreaterThanOrEqualTo(String value) {
            addCriterion("grade >=", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeLessThan(String value) {
            addCriterion("grade <", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeLessThanOrEqualTo(String value) {
            addCriterion("grade <=", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeLike(String value) {
            addCriterion("grade like", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeNotLike(String value) {
            addCriterion("grade not like", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeIn(List<String> values) {
            addCriterion("grade in", values, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeNotIn(List<String> values) {
            addCriterion("grade not in", values, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeBetween(String value1, String value2) {
            addCriterion("grade between", value1, value2, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeNotBetween(String value1, String value2) {
            addCriterion("grade not between", value1, value2, "grade");
            return (Criteria) this;
        }

        public Criteria andClassesIsNull() {
            addCriterion("classes is null");
            return (Criteria) this;
        }

        public Criteria andClassesIsNotNull() {
            addCriterion("classes is not null");
            return (Criteria) this;
        }

        public Criteria andClassesEqualTo(String value) {
            addCriterion("classes =", value, "classes");
            return (Criteria) this;
        }

        public Criteria andClassesNotEqualTo(String value) {
            addCriterion("classes <>", value, "classes");
            return (Criteria) this;
        }

        public Criteria andClassesGreaterThan(String value) {
            addCriterion("classes >", value, "classes");
            return (Criteria) this;
        }

        public Criteria andClassesGreaterThanOrEqualTo(String value) {
            addCriterion("classes >=", value, "classes");
            return (Criteria) this;
        }

        public Criteria andClassesLessThan(String value) {
            addCriterion("classes <", value, "classes");
            return (Criteria) this;
        }

        public Criteria andClassesLessThanOrEqualTo(String value) {
            addCriterion("classes <=", value, "classes");
            return (Criteria) this;
        }

        public Criteria andClassesLike(String value) {
            addCriterion("classes like", value, "classes");
            return (Criteria) this;
        }

        public Criteria andClassesNotLike(String value) {
            addCriterion("classes not like", value, "classes");
            return (Criteria) this;
        }

        public Criteria andClassesIn(List<String> values) {
            addCriterion("classes in", values, "classes");
            return (Criteria) this;
        }

        public Criteria andClassesNotIn(List<String> values) {
            addCriterion("classes not in", values, "classes");
            return (Criteria) this;
        }

        public Criteria andClassesBetween(String value1, String value2) {
            addCriterion("classes between", value1, value2, "classes");
            return (Criteria) this;
        }

        public Criteria andClassesNotBetween(String value1, String value2) {
            addCriterion("classes not between", value1, value2, "classes");
            return (Criteria) this;
        }

        public Criteria andStuTypeIsNull() {
            addCriterion("stu_type is null");
            return (Criteria) this;
        }

        public Criteria andStuTypeIsNotNull() {
            addCriterion("stu_type is not null");
            return (Criteria) this;
        }

        public Criteria andStuTypeEqualTo(Integer value) {
            addCriterion("stu_type =", value, "stuType");
            return (Criteria) this;
        }

        public Criteria andStuTypeNotEqualTo(Integer value) {
            addCriterion("stu_type <>", value, "stuType");
            return (Criteria) this;
        }

        public Criteria andStuTypeGreaterThan(Integer value) {
            addCriterion("stu_type >", value, "stuType");
            return (Criteria) this;
        }

        public Criteria andStuTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("stu_type >=", value, "stuType");
            return (Criteria) this;
        }

        public Criteria andStuTypeLessThan(Integer value) {
            addCriterion("stu_type <", value, "stuType");
            return (Criteria) this;
        }

        public Criteria andStuTypeLessThanOrEqualTo(Integer value) {
            addCriterion("stu_type <=", value, "stuType");
            return (Criteria) this;
        }

        public Criteria andStuTypeIn(List<Integer> values) {
            addCriterion("stu_type in", values, "stuType");
            return (Criteria) this;
        }

        public Criteria andStuTypeNotIn(List<Integer> values) {
            addCriterion("stu_type not in", values, "stuType");
            return (Criteria) this;
        }

        public Criteria andStuTypeBetween(Integer value1, Integer value2) {
            addCriterion("stu_type between", value1, value2, "stuType");
            return (Criteria) this;
        }

        public Criteria andStuTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("stu_type not between", value1, value2, "stuType");
            return (Criteria) this;
        }

        public Criteria andTrainingIsNull() {
            addCriterion("training is null");
            return (Criteria) this;
        }

        public Criteria andTrainingIsNotNull() {
            addCriterion("training is not null");
            return (Criteria) this;
        }

        public Criteria andTrainingEqualTo(String value) {
            addCriterion("training =", value, "training");
            return (Criteria) this;
        }

        public Criteria andTrainingNotEqualTo(String value) {
            addCriterion("training <>", value, "training");
            return (Criteria) this;
        }

        public Criteria andTrainingGreaterThan(String value) {
            addCriterion("training >", value, "training");
            return (Criteria) this;
        }

        public Criteria andTrainingGreaterThanOrEqualTo(String value) {
            addCriterion("training >=", value, "training");
            return (Criteria) this;
        }

        public Criteria andTrainingLessThan(String value) {
            addCriterion("training <", value, "training");
            return (Criteria) this;
        }

        public Criteria andTrainingLessThanOrEqualTo(String value) {
            addCriterion("training <=", value, "training");
            return (Criteria) this;
        }

        public Criteria andTrainingLike(String value) {
            addCriterion("training like", value, "training");
            return (Criteria) this;
        }

        public Criteria andTrainingNotLike(String value) {
            addCriterion("training not like", value, "training");
            return (Criteria) this;
        }

        public Criteria andTrainingIn(List<String> values) {
            addCriterion("training in", values, "training");
            return (Criteria) this;
        }

        public Criteria andTrainingNotIn(List<String> values) {
            addCriterion("training not in", values, "training");
            return (Criteria) this;
        }

        public Criteria andTrainingBetween(String value1, String value2) {
            addCriterion("training between", value1, value2, "training");
            return (Criteria) this;
        }

        public Criteria andTrainingNotBetween(String value1, String value2) {
            addCriterion("training not between", value1, value2, "training");
            return (Criteria) this;
        }

        public Criteria andScoreHisIsNull() {
            addCriterion("score_his is null");
            return (Criteria) this;
        }

        public Criteria andScoreHisIsNotNull() {
            addCriterion("score_his is not null");
            return (Criteria) this;
        }

        public Criteria andScoreHisEqualTo(Integer value) {
            addCriterion("score_his =", value, "scoreHis");
            return (Criteria) this;
        }

        public Criteria andScoreHisNotEqualTo(Integer value) {
            addCriterion("score_his <>", value, "scoreHis");
            return (Criteria) this;
        }

        public Criteria andScoreHisGreaterThan(Integer value) {
            addCriterion("score_his >", value, "scoreHis");
            return (Criteria) this;
        }

        public Criteria andScoreHisGreaterThanOrEqualTo(Integer value) {
            addCriterion("score_his >=", value, "scoreHis");
            return (Criteria) this;
        }

        public Criteria andScoreHisLessThan(Integer value) {
            addCriterion("score_his <", value, "scoreHis");
            return (Criteria) this;
        }

        public Criteria andScoreHisLessThanOrEqualTo(Integer value) {
            addCriterion("score_his <=", value, "scoreHis");
            return (Criteria) this;
        }

        public Criteria andScoreHisIn(List<Integer> values) {
            addCriterion("score_his in", values, "scoreHis");
            return (Criteria) this;
        }

        public Criteria andScoreHisNotIn(List<Integer> values) {
            addCriterion("score_his not in", values, "scoreHis");
            return (Criteria) this;
        }

        public Criteria andScoreHisBetween(Integer value1, Integer value2) {
            addCriterion("score_his between", value1, value2, "scoreHis");
            return (Criteria) this;
        }

        public Criteria andScoreHisNotBetween(Integer value1, Integer value2) {
            addCriterion("score_his not between", value1, value2, "scoreHis");
            return (Criteria) this;
        }

        public Criteria andTimeExamIsNull() {
            addCriterion("time_exam is null");
            return (Criteria) this;
        }

        public Criteria andTimeExamIsNotNull() {
            addCriterion("time_exam is not null");
            return (Criteria) this;
        }

        public Criteria andTimeExamEqualTo(Date value) {
            addCriterionForJDBCDate("time_exam =", value, "timeExam");
            return (Criteria) this;
        }

        public Criteria andTimeExamNotEqualTo(Date value) {
            addCriterionForJDBCDate("time_exam <>", value, "timeExam");
            return (Criteria) this;
        }

        public Criteria andTimeExamGreaterThan(Date value) {
            addCriterionForJDBCDate("time_exam >", value, "timeExam");
            return (Criteria) this;
        }

        public Criteria andTimeExamGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("time_exam >=", value, "timeExam");
            return (Criteria) this;
        }

        public Criteria andTimeExamLessThan(Date value) {
            addCriterionForJDBCDate("time_exam <", value, "timeExam");
            return (Criteria) this;
        }

        public Criteria andTimeExamLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("time_exam <=", value, "timeExam");
            return (Criteria) this;
        }

        public Criteria andTimeExamIn(List<Date> values) {
            addCriterionForJDBCDate("time_exam in", values, "timeExam");
            return (Criteria) this;
        }

        public Criteria andTimeExamNotIn(List<Date> values) {
            addCriterionForJDBCDate("time_exam not in", values, "timeExam");
            return (Criteria) this;
        }

        public Criteria andTimeExamBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("time_exam between", value1, value2, "timeExam");
            return (Criteria) this;
        }

        public Criteria andTimeExamNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("time_exam not between", value1, value2, "timeExam");
            return (Criteria) this;
        }

        public Criteria andScoreExpectIsNull() {
            addCriterion("score_expect is null");
            return (Criteria) this;
        }

        public Criteria andScoreExpectIsNotNull() {
            addCriterion("score_expect is not null");
            return (Criteria) this;
        }

        public Criteria andScoreExpectEqualTo(Integer value) {
            addCriterion("score_expect =", value, "scoreExpect");
            return (Criteria) this;
        }

        public Criteria andScoreExpectNotEqualTo(Integer value) {
            addCriterion("score_expect <>", value, "scoreExpect");
            return (Criteria) this;
        }

        public Criteria andScoreExpectGreaterThan(Integer value) {
            addCriterion("score_expect >", value, "scoreExpect");
            return (Criteria) this;
        }

        public Criteria andScoreExpectGreaterThanOrEqualTo(Integer value) {
            addCriterion("score_expect >=", value, "scoreExpect");
            return (Criteria) this;
        }

        public Criteria andScoreExpectLessThan(Integer value) {
            addCriterion("score_expect <", value, "scoreExpect");
            return (Criteria) this;
        }

        public Criteria andScoreExpectLessThanOrEqualTo(Integer value) {
            addCriterion("score_expect <=", value, "scoreExpect");
            return (Criteria) this;
        }

        public Criteria andScoreExpectIn(List<Integer> values) {
            addCriterion("score_expect in", values, "scoreExpect");
            return (Criteria) this;
        }

        public Criteria andScoreExpectNotIn(List<Integer> values) {
            addCriterion("score_expect not in", values, "scoreExpect");
            return (Criteria) this;
        }

        public Criteria andScoreExpectBetween(Integer value1, Integer value2) {
            addCriterion("score_expect between", value1, value2, "scoreExpect");
            return (Criteria) this;
        }

        public Criteria andScoreExpectNotBetween(Integer value1, Integer value2) {
            addCriterion("score_expect not between", value1, value2, "scoreExpect");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateIsNull() {
            addCriterion("time_update is null");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateIsNotNull() {
            addCriterion("time_update is not null");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateEqualTo(Date value) {
            addCriterion("time_update =", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateNotEqualTo(Date value) {
            addCriterion("time_update <>", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateGreaterThan(Date value) {
            addCriterion("time_update >", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateGreaterThanOrEqualTo(Date value) {
            addCriterion("time_update >=", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateLessThan(Date value) {
            addCriterion("time_update <", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateLessThanOrEqualTo(Date value) {
            addCriterion("time_update <=", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateIn(List<Date> values) {
            addCriterion("time_update in", values, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateNotIn(List<Date> values) {
            addCriterion("time_update not in", values, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateBetween(Date value1, Date value2) {
            addCriterion("time_update between", value1, value2, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateNotBetween(Date value1, Date value2) {
            addCriterion("time_update not between", value1, value2, "timeUpdate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bas_stu
     *
     * @mbggenerated do_not_delete_during_merge Tue Jun 21 00:00:03 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bas_stu
     *
     * @mbggenerated Tue Jun 21 00:00:03 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}
package com.qinjiangbo.gen.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class RegsatRateExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table regsat_rate
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table regsat_rate
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table regsat_rate
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regsat_rate
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public RegsatRateExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regsat_rate
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regsat_rate
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regsat_rate
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regsat_rate
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regsat_rate
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regsat_rate
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regsat_rate
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regsat_rate
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regsat_rate
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regsat_rate
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table regsat_rate
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andRateCodeIsNull() {
            addCriterion("rate_code is null");
            return (Criteria) this;
        }

        public Criteria andRateCodeIsNotNull() {
            addCriterion("rate_code is not null");
            return (Criteria) this;
        }

        public Criteria andRateCodeEqualTo(String value) {
            addCriterion("rate_code =", value, "rateCode");
            return (Criteria) this;
        }

        public Criteria andRateCodeNotEqualTo(String value) {
            addCriterion("rate_code <>", value, "rateCode");
            return (Criteria) this;
        }

        public Criteria andRateCodeGreaterThan(String value) {
            addCriterion("rate_code >", value, "rateCode");
            return (Criteria) this;
        }

        public Criteria andRateCodeGreaterThanOrEqualTo(String value) {
            addCriterion("rate_code >=", value, "rateCode");
            return (Criteria) this;
        }

        public Criteria andRateCodeLessThan(String value) {
            addCriterion("rate_code <", value, "rateCode");
            return (Criteria) this;
        }

        public Criteria andRateCodeLessThanOrEqualTo(String value) {
            addCriterion("rate_code <=", value, "rateCode");
            return (Criteria) this;
        }

        public Criteria andRateCodeLike(String value) {
            addCriterion("rate_code like", value, "rateCode");
            return (Criteria) this;
        }

        public Criteria andRateCodeNotLike(String value) {
            addCriterion("rate_code not like", value, "rateCode");
            return (Criteria) this;
        }

        public Criteria andRateCodeIn(List<String> values) {
            addCriterion("rate_code in", values, "rateCode");
            return (Criteria) this;
        }

        public Criteria andRateCodeNotIn(List<String> values) {
            addCriterion("rate_code not in", values, "rateCode");
            return (Criteria) this;
        }

        public Criteria andRateCodeBetween(String value1, String value2) {
            addCriterion("rate_code between", value1, value2, "rateCode");
            return (Criteria) this;
        }

        public Criteria andRateCodeNotBetween(String value1, String value2) {
            addCriterion("rate_code not between", value1, value2, "rateCode");
            return (Criteria) this;
        }

        public Criteria andRateDateIsNull() {
            addCriterion("rate_date is null");
            return (Criteria) this;
        }

        public Criteria andRateDateIsNotNull() {
            addCriterion("rate_date is not null");
            return (Criteria) this;
        }

        public Criteria andRateDateEqualTo(Date value) {
            addCriterionForJDBCDate("rate_date =", value, "rateDate");
            return (Criteria) this;
        }

        public Criteria andRateDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("rate_date <>", value, "rateDate");
            return (Criteria) this;
        }

        public Criteria andRateDateGreaterThan(Date value) {
            addCriterionForJDBCDate("rate_date >", value, "rateDate");
            return (Criteria) this;
        }

        public Criteria andRateDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("rate_date >=", value, "rateDate");
            return (Criteria) this;
        }

        public Criteria andRateDateLessThan(Date value) {
            addCriterionForJDBCDate("rate_date <", value, "rateDate");
            return (Criteria) this;
        }

        public Criteria andRateDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("rate_date <=", value, "rateDate");
            return (Criteria) this;
        }

        public Criteria andRateDateIn(List<Date> values) {
            addCriterionForJDBCDate("rate_date in", values, "rateDate");
            return (Criteria) this;
        }

        public Criteria andRateDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("rate_date not in", values, "rateDate");
            return (Criteria) this;
        }

        public Criteria andRateDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("rate_date between", value1, value2, "rateDate");
            return (Criteria) this;
        }

        public Criteria andRateDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("rate_date not between", value1, value2, "rateDate");
            return (Criteria) this;
        }

        public Criteria andTimeOrgIsNull() {
            addCriterion("time_org is null");
            return (Criteria) this;
        }

        public Criteria andTimeOrgIsNotNull() {
            addCriterion("time_org is not null");
            return (Criteria) this;
        }

        public Criteria andTimeOrgEqualTo(Date value) {
            addCriterion("time_org =", value, "timeOrg");
            return (Criteria) this;
        }

        public Criteria andTimeOrgNotEqualTo(Date value) {
            addCriterion("time_org <>", value, "timeOrg");
            return (Criteria) this;
        }

        public Criteria andTimeOrgGreaterThan(Date value) {
            addCriterion("time_org >", value, "timeOrg");
            return (Criteria) this;
        }

        public Criteria andTimeOrgGreaterThanOrEqualTo(Date value) {
            addCriterion("time_org >=", value, "timeOrg");
            return (Criteria) this;
        }

        public Criteria andTimeOrgLessThan(Date value) {
            addCriterion("time_org <", value, "timeOrg");
            return (Criteria) this;
        }

        public Criteria andTimeOrgLessThanOrEqualTo(Date value) {
            addCriterion("time_org <=", value, "timeOrg");
            return (Criteria) this;
        }

        public Criteria andTimeOrgIn(List<Date> values) {
            addCriterion("time_org in", values, "timeOrg");
            return (Criteria) this;
        }

        public Criteria andTimeOrgNotIn(List<Date> values) {
            addCriterion("time_org not in", values, "timeOrg");
            return (Criteria) this;
        }

        public Criteria andTimeOrgBetween(Date value1, Date value2) {
            addCriterion("time_org between", value1, value2, "timeOrg");
            return (Criteria) this;
        }

        public Criteria andTimeOrgNotBetween(Date value1, Date value2) {
            addCriterion("time_org not between", value1, value2, "timeOrg");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateIsNull() {
            addCriterion("time_update is null");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateIsNotNull() {
            addCriterion("time_update is not null");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateEqualTo(Date value) {
            addCriterion("time_update =", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateNotEqualTo(Date value) {
            addCriterion("time_update <>", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateGreaterThan(Date value) {
            addCriterion("time_update >", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateGreaterThanOrEqualTo(Date value) {
            addCriterion("time_update >=", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateLessThan(Date value) {
            addCriterion("time_update <", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateLessThanOrEqualTo(Date value) {
            addCriterion("time_update <=", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateIn(List<Date> values) {
            addCriterion("time_update in", values, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateNotIn(List<Date> values) {
            addCriterion("time_update not in", values, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateBetween(Date value1, Date value2) {
            addCriterion("time_update between", value1, value2, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateNotBetween(Date value1, Date value2) {
            addCriterion("time_update not between", value1, value2, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andRateUsIsNull() {
            addCriterion("rate_us is null");
            return (Criteria) this;
        }

        public Criteria andRateUsIsNotNull() {
            addCriterion("rate_us is not null");
            return (Criteria) this;
        }

        public Criteria andRateUsEqualTo(BigDecimal value) {
            addCriterion("rate_us =", value, "rateUs");
            return (Criteria) this;
        }

        public Criteria andRateUsNotEqualTo(BigDecimal value) {
            addCriterion("rate_us <>", value, "rateUs");
            return (Criteria) this;
        }

        public Criteria andRateUsGreaterThan(BigDecimal value) {
            addCriterion("rate_us >", value, "rateUs");
            return (Criteria) this;
        }

        public Criteria andRateUsGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("rate_us >=", value, "rateUs");
            return (Criteria) this;
        }

        public Criteria andRateUsLessThan(BigDecimal value) {
            addCriterion("rate_us <", value, "rateUs");
            return (Criteria) this;
        }

        public Criteria andRateUsLessThanOrEqualTo(BigDecimal value) {
            addCriterion("rate_us <=", value, "rateUs");
            return (Criteria) this;
        }

        public Criteria andRateUsIn(List<BigDecimal> values) {
            addCriterion("rate_us in", values, "rateUs");
            return (Criteria) this;
        }

        public Criteria andRateUsNotIn(List<BigDecimal> values) {
            addCriterion("rate_us not in", values, "rateUs");
            return (Criteria) this;
        }

        public Criteria andRateUsBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("rate_us between", value1, value2, "rateUs");
            return (Criteria) this;
        }

        public Criteria andRateUsNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("rate_us not between", value1, value2, "rateUs");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table regsat_rate
     *
     * @mbggenerated do_not_delete_during_merge Tue Jun 21 00:00:04 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table regsat_rate
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}
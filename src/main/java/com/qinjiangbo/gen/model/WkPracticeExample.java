package com.qinjiangbo.gen.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class WkPracticeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table wk_practice
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table wk_practice
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table wk_practice
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wk_practice
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public WkPracticeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wk_practice
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wk_practice
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wk_practice
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wk_practice
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wk_practice
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wk_practice
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wk_practice
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wk_practice
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wk_practice
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wk_practice
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table wk_practice
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Long value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Long value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Long value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Long value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Long value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Long> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Long> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Long value1, Long value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Long value1, Long value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andTypesIsNull() {
            addCriterion("types is null");
            return (Criteria) this;
        }

        public Criteria andTypesIsNotNull() {
            addCriterion("types is not null");
            return (Criteria) this;
        }

        public Criteria andTypesEqualTo(Long value) {
            addCriterion("types =", value, "types");
            return (Criteria) this;
        }

        public Criteria andTypesNotEqualTo(Long value) {
            addCriterion("types <>", value, "types");
            return (Criteria) this;
        }

        public Criteria andTypesGreaterThan(Long value) {
            addCriterion("types >", value, "types");
            return (Criteria) this;
        }

        public Criteria andTypesGreaterThanOrEqualTo(Long value) {
            addCriterion("types >=", value, "types");
            return (Criteria) this;
        }

        public Criteria andTypesLessThan(Long value) {
            addCriterion("types <", value, "types");
            return (Criteria) this;
        }

        public Criteria andTypesLessThanOrEqualTo(Long value) {
            addCriterion("types <=", value, "types");
            return (Criteria) this;
        }

        public Criteria andTypesIn(List<Long> values) {
            addCriterion("types in", values, "types");
            return (Criteria) this;
        }

        public Criteria andTypesNotIn(List<Long> values) {
            addCriterion("types not in", values, "types");
            return (Criteria) this;
        }

        public Criteria andTypesBetween(Long value1, Long value2) {
            addCriterion("types between", value1, value2, "types");
            return (Criteria) this;
        }

        public Criteria andTypesNotBetween(Long value1, Long value2) {
            addCriterion("types not between", value1, value2, "types");
            return (Criteria) this;
        }

        public Criteria andTitleIsNull() {
            addCriterion("title is null");
            return (Criteria) this;
        }

        public Criteria andTitleIsNotNull() {
            addCriterion("title is not null");
            return (Criteria) this;
        }

        public Criteria andTitleEqualTo(String value) {
            addCriterion("title =", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotEqualTo(String value) {
            addCriterion("title <>", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleGreaterThan(String value) {
            addCriterion("title >", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleGreaterThanOrEqualTo(String value) {
            addCriterion("title >=", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleLessThan(String value) {
            addCriterion("title <", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleLessThanOrEqualTo(String value) {
            addCriterion("title <=", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleLike(String value) {
            addCriterion("title like", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotLike(String value) {
            addCriterion("title not like", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleIn(List<String> values) {
            addCriterion("title in", values, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotIn(List<String> values) {
            addCriterion("title not in", values, "title");
            return (Criteria) this;
        }

        public Criteria andTitleBetween(String value1, String value2) {
            addCriterion("title between", value1, value2, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotBetween(String value1, String value2) {
            addCriterion("title not between", value1, value2, "title");
            return (Criteria) this;
        }

        public Criteria andNumAllIsNull() {
            addCriterion("num_all is null");
            return (Criteria) this;
        }

        public Criteria andNumAllIsNotNull() {
            addCriterion("num_all is not null");
            return (Criteria) this;
        }

        public Criteria andNumAllEqualTo(Integer value) {
            addCriterion("num_all =", value, "numAll");
            return (Criteria) this;
        }

        public Criteria andNumAllNotEqualTo(Integer value) {
            addCriterion("num_all <>", value, "numAll");
            return (Criteria) this;
        }

        public Criteria andNumAllGreaterThan(Integer value) {
            addCriterion("num_all >", value, "numAll");
            return (Criteria) this;
        }

        public Criteria andNumAllGreaterThanOrEqualTo(Integer value) {
            addCriterion("num_all >=", value, "numAll");
            return (Criteria) this;
        }

        public Criteria andNumAllLessThan(Integer value) {
            addCriterion("num_all <", value, "numAll");
            return (Criteria) this;
        }

        public Criteria andNumAllLessThanOrEqualTo(Integer value) {
            addCriterion("num_all <=", value, "numAll");
            return (Criteria) this;
        }

        public Criteria andNumAllIn(List<Integer> values) {
            addCriterion("num_all in", values, "numAll");
            return (Criteria) this;
        }

        public Criteria andNumAllNotIn(List<Integer> values) {
            addCriterion("num_all not in", values, "numAll");
            return (Criteria) this;
        }

        public Criteria andNumAllBetween(Integer value1, Integer value2) {
            addCriterion("num_all between", value1, value2, "numAll");
            return (Criteria) this;
        }

        public Criteria andNumAllNotBetween(Integer value1, Integer value2) {
            addCriterion("num_all not between", value1, value2, "numAll");
            return (Criteria) this;
        }

        public Criteria andNumDoneIsNull() {
            addCriterion("num_done is null");
            return (Criteria) this;
        }

        public Criteria andNumDoneIsNotNull() {
            addCriterion("num_done is not null");
            return (Criteria) this;
        }

        public Criteria andNumDoneEqualTo(Integer value) {
            addCriterion("num_done =", value, "numDone");
            return (Criteria) this;
        }

        public Criteria andNumDoneNotEqualTo(Integer value) {
            addCriterion("num_done <>", value, "numDone");
            return (Criteria) this;
        }

        public Criteria andNumDoneGreaterThan(Integer value) {
            addCriterion("num_done >", value, "numDone");
            return (Criteria) this;
        }

        public Criteria andNumDoneGreaterThanOrEqualTo(Integer value) {
            addCriterion("num_done >=", value, "numDone");
            return (Criteria) this;
        }

        public Criteria andNumDoneLessThan(Integer value) {
            addCriterion("num_done <", value, "numDone");
            return (Criteria) this;
        }

        public Criteria andNumDoneLessThanOrEqualTo(Integer value) {
            addCriterion("num_done <=", value, "numDone");
            return (Criteria) this;
        }

        public Criteria andNumDoneIn(List<Integer> values) {
            addCriterion("num_done in", values, "numDone");
            return (Criteria) this;
        }

        public Criteria andNumDoneNotIn(List<Integer> values) {
            addCriterion("num_done not in", values, "numDone");
            return (Criteria) this;
        }

        public Criteria andNumDoneBetween(Integer value1, Integer value2) {
            addCriterion("num_done between", value1, value2, "numDone");
            return (Criteria) this;
        }

        public Criteria andNumDoneNotBetween(Integer value1, Integer value2) {
            addCriterion("num_done not between", value1, value2, "numDone");
            return (Criteria) this;
        }

        public Criteria andNumAttrIsNull() {
            addCriterion("num_attr is null");
            return (Criteria) this;
        }

        public Criteria andNumAttrIsNotNull() {
            addCriterion("num_attr is not null");
            return (Criteria) this;
        }

        public Criteria andNumAttrEqualTo(Integer value) {
            addCriterion("num_attr =", value, "numAttr");
            return (Criteria) this;
        }

        public Criteria andNumAttrNotEqualTo(Integer value) {
            addCriterion("num_attr <>", value, "numAttr");
            return (Criteria) this;
        }

        public Criteria andNumAttrGreaterThan(Integer value) {
            addCriterion("num_attr >", value, "numAttr");
            return (Criteria) this;
        }

        public Criteria andNumAttrGreaterThanOrEqualTo(Integer value) {
            addCriterion("num_attr >=", value, "numAttr");
            return (Criteria) this;
        }

        public Criteria andNumAttrLessThan(Integer value) {
            addCriterion("num_attr <", value, "numAttr");
            return (Criteria) this;
        }

        public Criteria andNumAttrLessThanOrEqualTo(Integer value) {
            addCriterion("num_attr <=", value, "numAttr");
            return (Criteria) this;
        }

        public Criteria andNumAttrIn(List<Integer> values) {
            addCriterion("num_attr in", values, "numAttr");
            return (Criteria) this;
        }

        public Criteria andNumAttrNotIn(List<Integer> values) {
            addCriterion("num_attr not in", values, "numAttr");
            return (Criteria) this;
        }

        public Criteria andNumAttrBetween(Integer value1, Integer value2) {
            addCriterion("num_attr between", value1, value2, "numAttr");
            return (Criteria) this;
        }

        public Criteria andNumAttrNotBetween(Integer value1, Integer value2) {
            addCriterion("num_attr not between", value1, value2, "numAttr");
            return (Criteria) this;
        }

        public Criteria andQueContentIsNull() {
            addCriterion("que_content is null");
            return (Criteria) this;
        }

        public Criteria andQueContentIsNotNull() {
            addCriterion("que_content is not null");
            return (Criteria) this;
        }

        public Criteria andQueContentEqualTo(String value) {
            addCriterion("que_content =", value, "queContent");
            return (Criteria) this;
        }

        public Criteria andQueContentNotEqualTo(String value) {
            addCriterion("que_content <>", value, "queContent");
            return (Criteria) this;
        }

        public Criteria andQueContentGreaterThan(String value) {
            addCriterion("que_content >", value, "queContent");
            return (Criteria) this;
        }

        public Criteria andQueContentGreaterThanOrEqualTo(String value) {
            addCriterion("que_content >=", value, "queContent");
            return (Criteria) this;
        }

        public Criteria andQueContentLessThan(String value) {
            addCriterion("que_content <", value, "queContent");
            return (Criteria) this;
        }

        public Criteria andQueContentLessThanOrEqualTo(String value) {
            addCriterion("que_content <=", value, "queContent");
            return (Criteria) this;
        }

        public Criteria andQueContentLike(String value) {
            addCriterion("que_content like", value, "queContent");
            return (Criteria) this;
        }

        public Criteria andQueContentNotLike(String value) {
            addCriterion("que_content not like", value, "queContent");
            return (Criteria) this;
        }

        public Criteria andQueContentIn(List<String> values) {
            addCriterion("que_content in", values, "queContent");
            return (Criteria) this;
        }

        public Criteria andQueContentNotIn(List<String> values) {
            addCriterion("que_content not in", values, "queContent");
            return (Criteria) this;
        }

        public Criteria andQueContentBetween(String value1, String value2) {
            addCriterion("que_content between", value1, value2, "queContent");
            return (Criteria) this;
        }

        public Criteria andQueContentNotBetween(String value1, String value2) {
            addCriterion("que_content not between", value1, value2, "queContent");
            return (Criteria) this;
        }

        public Criteria andWkIdIsNull() {
            addCriterion("wk_id is null");
            return (Criteria) this;
        }

        public Criteria andWkIdIsNotNull() {
            addCriterion("wk_id is not null");
            return (Criteria) this;
        }

        public Criteria andWkIdEqualTo(Long value) {
            addCriterion("wk_id =", value, "wkId");
            return (Criteria) this;
        }

        public Criteria andWkIdNotEqualTo(Long value) {
            addCriterion("wk_id <>", value, "wkId");
            return (Criteria) this;
        }

        public Criteria andWkIdGreaterThan(Long value) {
            addCriterion("wk_id >", value, "wkId");
            return (Criteria) this;
        }

        public Criteria andWkIdGreaterThanOrEqualTo(Long value) {
            addCriterion("wk_id >=", value, "wkId");
            return (Criteria) this;
        }

        public Criteria andWkIdLessThan(Long value) {
            addCriterion("wk_id <", value, "wkId");
            return (Criteria) this;
        }

        public Criteria andWkIdLessThanOrEqualTo(Long value) {
            addCriterion("wk_id <=", value, "wkId");
            return (Criteria) this;
        }

        public Criteria andWkIdIn(List<Long> values) {
            addCriterion("wk_id in", values, "wkId");
            return (Criteria) this;
        }

        public Criteria andWkIdNotIn(List<Long> values) {
            addCriterion("wk_id not in", values, "wkId");
            return (Criteria) this;
        }

        public Criteria andWkIdBetween(Long value1, Long value2) {
            addCriterion("wk_id between", value1, value2, "wkId");
            return (Criteria) this;
        }

        public Criteria andWkIdNotBetween(Long value1, Long value2) {
            addCriterion("wk_id not between", value1, value2, "wkId");
            return (Criteria) this;
        }

        public Criteria andTimeLastupdatedIsNull() {
            addCriterion("time_lastupdated is null");
            return (Criteria) this;
        }

        public Criteria andTimeLastupdatedIsNotNull() {
            addCriterion("time_lastupdated is not null");
            return (Criteria) this;
        }

        public Criteria andTimeLastupdatedEqualTo(Date value) {
            addCriterion("time_lastupdated =", value, "timeLastupdated");
            return (Criteria) this;
        }

        public Criteria andTimeLastupdatedNotEqualTo(Date value) {
            addCriterion("time_lastupdated <>", value, "timeLastupdated");
            return (Criteria) this;
        }

        public Criteria andTimeLastupdatedGreaterThan(Date value) {
            addCriterion("time_lastupdated >", value, "timeLastupdated");
            return (Criteria) this;
        }

        public Criteria andTimeLastupdatedGreaterThanOrEqualTo(Date value) {
            addCriterion("time_lastupdated >=", value, "timeLastupdated");
            return (Criteria) this;
        }

        public Criteria andTimeLastupdatedLessThan(Date value) {
            addCriterion("time_lastupdated <", value, "timeLastupdated");
            return (Criteria) this;
        }

        public Criteria andTimeLastupdatedLessThanOrEqualTo(Date value) {
            addCriterion("time_lastupdated <=", value, "timeLastupdated");
            return (Criteria) this;
        }

        public Criteria andTimeLastupdatedIn(List<Date> values) {
            addCriterion("time_lastupdated in", values, "timeLastupdated");
            return (Criteria) this;
        }

        public Criteria andTimeLastupdatedNotIn(List<Date> values) {
            addCriterion("time_lastupdated not in", values, "timeLastupdated");
            return (Criteria) this;
        }

        public Criteria andTimeLastupdatedBetween(Date value1, Date value2) {
            addCriterion("time_lastupdated between", value1, value2, "timeLastupdated");
            return (Criteria) this;
        }

        public Criteria andTimeLastupdatedNotBetween(Date value1, Date value2) {
            addCriterion("time_lastupdated not between", value1, value2, "timeLastupdated");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("remark is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("remark is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("remark =", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("remark <>", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("remark >", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("remark >=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("remark <", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("remark <=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("remark like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("remark not like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("remark in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("remark not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("remark between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("remark not between", value1, value2, "remark");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table wk_practice
     *
     * @mbggenerated do_not_delete_during_merge Tue Jun 21 00:00:04 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table wk_practice
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}
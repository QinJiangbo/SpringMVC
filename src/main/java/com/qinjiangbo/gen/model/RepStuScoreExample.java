package com.qinjiangbo.gen.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class RepStuScoreExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rep_stu_score
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rep_stu_score
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rep_stu_score
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rep_stu_score
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public RepStuScoreExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rep_stu_score
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rep_stu_score
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rep_stu_score
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rep_stu_score
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rep_stu_score
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rep_stu_score
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rep_stu_score
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rep_stu_score
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rep_stu_score
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rep_stu_score
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rep_stu_score
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andWkDateIsNull() {
            addCriterion("wk_date is null");
            return (Criteria) this;
        }

        public Criteria andWkDateIsNotNull() {
            addCriterion("wk_date is not null");
            return (Criteria) this;
        }

        public Criteria andWkDateEqualTo(Date value) {
            addCriterionForJDBCDate("wk_date =", value, "wkDate");
            return (Criteria) this;
        }

        public Criteria andWkDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("wk_date <>", value, "wkDate");
            return (Criteria) this;
        }

        public Criteria andWkDateGreaterThan(Date value) {
            addCriterionForJDBCDate("wk_date >", value, "wkDate");
            return (Criteria) this;
        }

        public Criteria andWkDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("wk_date >=", value, "wkDate");
            return (Criteria) this;
        }

        public Criteria andWkDateLessThan(Date value) {
            addCriterionForJDBCDate("wk_date <", value, "wkDate");
            return (Criteria) this;
        }

        public Criteria andWkDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("wk_date <=", value, "wkDate");
            return (Criteria) this;
        }

        public Criteria andWkDateIn(List<Date> values) {
            addCriterionForJDBCDate("wk_date in", values, "wkDate");
            return (Criteria) this;
        }

        public Criteria andWkDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("wk_date not in", values, "wkDate");
            return (Criteria) this;
        }

        public Criteria andWkDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("wk_date between", value1, value2, "wkDate");
            return (Criteria) this;
        }

        public Criteria andWkDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("wk_date not between", value1, value2, "wkDate");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Long value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Long value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Long value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Long value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Long value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Long> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Long> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Long value1, Long value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Long value1, Long value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andAttrIsNull() {
            addCriterion("attr is null");
            return (Criteria) this;
        }

        public Criteria andAttrIsNotNull() {
            addCriterion("attr is not null");
            return (Criteria) this;
        }

        public Criteria andAttrEqualTo(Long value) {
            addCriterion("attr =", value, "attr");
            return (Criteria) this;
        }

        public Criteria andAttrNotEqualTo(Long value) {
            addCriterion("attr <>", value, "attr");
            return (Criteria) this;
        }

        public Criteria andAttrGreaterThan(Long value) {
            addCriterion("attr >", value, "attr");
            return (Criteria) this;
        }

        public Criteria andAttrGreaterThanOrEqualTo(Long value) {
            addCriterion("attr >=", value, "attr");
            return (Criteria) this;
        }

        public Criteria andAttrLessThan(Long value) {
            addCriterion("attr <", value, "attr");
            return (Criteria) this;
        }

        public Criteria andAttrLessThanOrEqualTo(Long value) {
            addCriterion("attr <=", value, "attr");
            return (Criteria) this;
        }

        public Criteria andAttrIn(List<Long> values) {
            addCriterion("attr in", values, "attr");
            return (Criteria) this;
        }

        public Criteria andAttrNotIn(List<Long> values) {
            addCriterion("attr not in", values, "attr");
            return (Criteria) this;
        }

        public Criteria andAttrBetween(Long value1, Long value2) {
            addCriterion("attr between", value1, value2, "attr");
            return (Criteria) this;
        }

        public Criteria andAttrNotBetween(Long value1, Long value2) {
            addCriterion("attr not between", value1, value2, "attr");
            return (Criteria) this;
        }

        public Criteria andTestTypeIsNull() {
            addCriterion("test_type is null");
            return (Criteria) this;
        }

        public Criteria andTestTypeIsNotNull() {
            addCriterion("test_type is not null");
            return (Criteria) this;
        }

        public Criteria andTestTypeEqualTo(Long value) {
            addCriterion("test_type =", value, "testType");
            return (Criteria) this;
        }

        public Criteria andTestTypeNotEqualTo(Long value) {
            addCriterion("test_type <>", value, "testType");
            return (Criteria) this;
        }

        public Criteria andTestTypeGreaterThan(Long value) {
            addCriterion("test_type >", value, "testType");
            return (Criteria) this;
        }

        public Criteria andTestTypeGreaterThanOrEqualTo(Long value) {
            addCriterion("test_type >=", value, "testType");
            return (Criteria) this;
        }

        public Criteria andTestTypeLessThan(Long value) {
            addCriterion("test_type <", value, "testType");
            return (Criteria) this;
        }

        public Criteria andTestTypeLessThanOrEqualTo(Long value) {
            addCriterion("test_type <=", value, "testType");
            return (Criteria) this;
        }

        public Criteria andTestTypeIn(List<Long> values) {
            addCriterion("test_type in", values, "testType");
            return (Criteria) this;
        }

        public Criteria andTestTypeNotIn(List<Long> values) {
            addCriterion("test_type not in", values, "testType");
            return (Criteria) this;
        }

        public Criteria andTestTypeBetween(Long value1, Long value2) {
            addCriterion("test_type between", value1, value2, "testType");
            return (Criteria) this;
        }

        public Criteria andTestTypeNotBetween(Long value1, Long value2) {
            addCriterion("test_type not between", value1, value2, "testType");
            return (Criteria) this;
        }

        public Criteria andScoreIsNull() {
            addCriterion("score is null");
            return (Criteria) this;
        }

        public Criteria andScoreIsNotNull() {
            addCriterion("score is not null");
            return (Criteria) this;
        }

        public Criteria andScoreEqualTo(BigDecimal value) {
            addCriterion("score =", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotEqualTo(BigDecimal value) {
            addCriterion("score <>", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreGreaterThan(BigDecimal value) {
            addCriterion("score >", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("score >=", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreLessThan(BigDecimal value) {
            addCriterion("score <", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreLessThanOrEqualTo(BigDecimal value) {
            addCriterion("score <=", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreIn(List<BigDecimal> values) {
            addCriterion("score in", values, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotIn(List<BigDecimal> values) {
            addCriterion("score not in", values, "score");
            return (Criteria) this;
        }

        public Criteria andScoreBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("score between", value1, value2, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("score not between", value1, value2, "score");
            return (Criteria) this;
        }

        public Criteria andAccuateRateIsNull() {
            addCriterion("accuate_rate is null");
            return (Criteria) this;
        }

        public Criteria andAccuateRateIsNotNull() {
            addCriterion("accuate_rate is not null");
            return (Criteria) this;
        }

        public Criteria andAccuateRateEqualTo(BigDecimal value) {
            addCriterion("accuate_rate =", value, "accuateRate");
            return (Criteria) this;
        }

        public Criteria andAccuateRateNotEqualTo(BigDecimal value) {
            addCriterion("accuate_rate <>", value, "accuateRate");
            return (Criteria) this;
        }

        public Criteria andAccuateRateGreaterThan(BigDecimal value) {
            addCriterion("accuate_rate >", value, "accuateRate");
            return (Criteria) this;
        }

        public Criteria andAccuateRateGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("accuate_rate >=", value, "accuateRate");
            return (Criteria) this;
        }

        public Criteria andAccuateRateLessThan(BigDecimal value) {
            addCriterion("accuate_rate <", value, "accuateRate");
            return (Criteria) this;
        }

        public Criteria andAccuateRateLessThanOrEqualTo(BigDecimal value) {
            addCriterion("accuate_rate <=", value, "accuateRate");
            return (Criteria) this;
        }

        public Criteria andAccuateRateIn(List<BigDecimal> values) {
            addCriterion("accuate_rate in", values, "accuateRate");
            return (Criteria) this;
        }

        public Criteria andAccuateRateNotIn(List<BigDecimal> values) {
            addCriterion("accuate_rate not in", values, "accuateRate");
            return (Criteria) this;
        }

        public Criteria andAccuateRateBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("accuate_rate between", value1, value2, "accuateRate");
            return (Criteria) this;
        }

        public Criteria andAccuateRateNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("accuate_rate not between", value1, value2, "accuateRate");
            return (Criteria) this;
        }

        public Criteria andNumAllIsNull() {
            addCriterion("num_all is null");
            return (Criteria) this;
        }

        public Criteria andNumAllIsNotNull() {
            addCriterion("num_all is not null");
            return (Criteria) this;
        }

        public Criteria andNumAllEqualTo(Integer value) {
            addCriterion("num_all =", value, "numAll");
            return (Criteria) this;
        }

        public Criteria andNumAllNotEqualTo(Integer value) {
            addCriterion("num_all <>", value, "numAll");
            return (Criteria) this;
        }

        public Criteria andNumAllGreaterThan(Integer value) {
            addCriterion("num_all >", value, "numAll");
            return (Criteria) this;
        }

        public Criteria andNumAllGreaterThanOrEqualTo(Integer value) {
            addCriterion("num_all >=", value, "numAll");
            return (Criteria) this;
        }

        public Criteria andNumAllLessThan(Integer value) {
            addCriterion("num_all <", value, "numAll");
            return (Criteria) this;
        }

        public Criteria andNumAllLessThanOrEqualTo(Integer value) {
            addCriterion("num_all <=", value, "numAll");
            return (Criteria) this;
        }

        public Criteria andNumAllIn(List<Integer> values) {
            addCriterion("num_all in", values, "numAll");
            return (Criteria) this;
        }

        public Criteria andNumAllNotIn(List<Integer> values) {
            addCriterion("num_all not in", values, "numAll");
            return (Criteria) this;
        }

        public Criteria andNumAllBetween(Integer value1, Integer value2) {
            addCriterion("num_all between", value1, value2, "numAll");
            return (Criteria) this;
        }

        public Criteria andNumAllNotBetween(Integer value1, Integer value2) {
            addCriterion("num_all not between", value1, value2, "numAll");
            return (Criteria) this;
        }

        public Criteria andNumRightIsNull() {
            addCriterion("num_right is null");
            return (Criteria) this;
        }

        public Criteria andNumRightIsNotNull() {
            addCriterion("num_right is not null");
            return (Criteria) this;
        }

        public Criteria andNumRightEqualTo(Integer value) {
            addCriterion("num_right =", value, "numRight");
            return (Criteria) this;
        }

        public Criteria andNumRightNotEqualTo(Integer value) {
            addCriterion("num_right <>", value, "numRight");
            return (Criteria) this;
        }

        public Criteria andNumRightGreaterThan(Integer value) {
            addCriterion("num_right >", value, "numRight");
            return (Criteria) this;
        }

        public Criteria andNumRightGreaterThanOrEqualTo(Integer value) {
            addCriterion("num_right >=", value, "numRight");
            return (Criteria) this;
        }

        public Criteria andNumRightLessThan(Integer value) {
            addCriterion("num_right <", value, "numRight");
            return (Criteria) this;
        }

        public Criteria andNumRightLessThanOrEqualTo(Integer value) {
            addCriterion("num_right <=", value, "numRight");
            return (Criteria) this;
        }

        public Criteria andNumRightIn(List<Integer> values) {
            addCriterion("num_right in", values, "numRight");
            return (Criteria) this;
        }

        public Criteria andNumRightNotIn(List<Integer> values) {
            addCriterion("num_right not in", values, "numRight");
            return (Criteria) this;
        }

        public Criteria andNumRightBetween(Integer value1, Integer value2) {
            addCriterion("num_right between", value1, value2, "numRight");
            return (Criteria) this;
        }

        public Criteria andNumRightNotBetween(Integer value1, Integer value2) {
            addCriterion("num_right not between", value1, value2, "numRight");
            return (Criteria) this;
        }

        public Criteria andNumWrongIsNull() {
            addCriterion("num_wrong is null");
            return (Criteria) this;
        }

        public Criteria andNumWrongIsNotNull() {
            addCriterion("num_wrong is not null");
            return (Criteria) this;
        }

        public Criteria andNumWrongEqualTo(Integer value) {
            addCriterion("num_wrong =", value, "numWrong");
            return (Criteria) this;
        }

        public Criteria andNumWrongNotEqualTo(Integer value) {
            addCriterion("num_wrong <>", value, "numWrong");
            return (Criteria) this;
        }

        public Criteria andNumWrongGreaterThan(Integer value) {
            addCriterion("num_wrong >", value, "numWrong");
            return (Criteria) this;
        }

        public Criteria andNumWrongGreaterThanOrEqualTo(Integer value) {
            addCriterion("num_wrong >=", value, "numWrong");
            return (Criteria) this;
        }

        public Criteria andNumWrongLessThan(Integer value) {
            addCriterion("num_wrong <", value, "numWrong");
            return (Criteria) this;
        }

        public Criteria andNumWrongLessThanOrEqualTo(Integer value) {
            addCriterion("num_wrong <=", value, "numWrong");
            return (Criteria) this;
        }

        public Criteria andNumWrongIn(List<Integer> values) {
            addCriterion("num_wrong in", values, "numWrong");
            return (Criteria) this;
        }

        public Criteria andNumWrongNotIn(List<Integer> values) {
            addCriterion("num_wrong not in", values, "numWrong");
            return (Criteria) this;
        }

        public Criteria andNumWrongBetween(Integer value1, Integer value2) {
            addCriterion("num_wrong between", value1, value2, "numWrong");
            return (Criteria) this;
        }

        public Criteria andNumWrongNotBetween(Integer value1, Integer value2) {
            addCriterion("num_wrong not between", value1, value2, "numWrong");
            return (Criteria) this;
        }

        public Criteria andTimeConsumingIsNull() {
            addCriterion("time_consuming is null");
            return (Criteria) this;
        }

        public Criteria andTimeConsumingIsNotNull() {
            addCriterion("time_consuming is not null");
            return (Criteria) this;
        }

        public Criteria andTimeConsumingEqualTo(Integer value) {
            addCriterion("time_consuming =", value, "timeConsuming");
            return (Criteria) this;
        }

        public Criteria andTimeConsumingNotEqualTo(Integer value) {
            addCriterion("time_consuming <>", value, "timeConsuming");
            return (Criteria) this;
        }

        public Criteria andTimeConsumingGreaterThan(Integer value) {
            addCriterion("time_consuming >", value, "timeConsuming");
            return (Criteria) this;
        }

        public Criteria andTimeConsumingGreaterThanOrEqualTo(Integer value) {
            addCriterion("time_consuming >=", value, "timeConsuming");
            return (Criteria) this;
        }

        public Criteria andTimeConsumingLessThan(Integer value) {
            addCriterion("time_consuming <", value, "timeConsuming");
            return (Criteria) this;
        }

        public Criteria andTimeConsumingLessThanOrEqualTo(Integer value) {
            addCriterion("time_consuming <=", value, "timeConsuming");
            return (Criteria) this;
        }

        public Criteria andTimeConsumingIn(List<Integer> values) {
            addCriterion("time_consuming in", values, "timeConsuming");
            return (Criteria) this;
        }

        public Criteria andTimeConsumingNotIn(List<Integer> values) {
            addCriterion("time_consuming not in", values, "timeConsuming");
            return (Criteria) this;
        }

        public Criteria andTimeConsumingBetween(Integer value1, Integer value2) {
            addCriterion("time_consuming between", value1, value2, "timeConsuming");
            return (Criteria) this;
        }

        public Criteria andTimeConsumingNotBetween(Integer value1, Integer value2) {
            addCriterion("time_consuming not between", value1, value2, "timeConsuming");
            return (Criteria) this;
        }

        public Criteria andTimeSecIsNull() {
            addCriterion("time_sec is null");
            return (Criteria) this;
        }

        public Criteria andTimeSecIsNotNull() {
            addCriterion("time_sec is not null");
            return (Criteria) this;
        }

        public Criteria andTimeSecEqualTo(Integer value) {
            addCriterion("time_sec =", value, "timeSec");
            return (Criteria) this;
        }

        public Criteria andTimeSecNotEqualTo(Integer value) {
            addCriterion("time_sec <>", value, "timeSec");
            return (Criteria) this;
        }

        public Criteria andTimeSecGreaterThan(Integer value) {
            addCriterion("time_sec >", value, "timeSec");
            return (Criteria) this;
        }

        public Criteria andTimeSecGreaterThanOrEqualTo(Integer value) {
            addCriterion("time_sec >=", value, "timeSec");
            return (Criteria) this;
        }

        public Criteria andTimeSecLessThan(Integer value) {
            addCriterion("time_sec <", value, "timeSec");
            return (Criteria) this;
        }

        public Criteria andTimeSecLessThanOrEqualTo(Integer value) {
            addCriterion("time_sec <=", value, "timeSec");
            return (Criteria) this;
        }

        public Criteria andTimeSecIn(List<Integer> values) {
            addCriterion("time_sec in", values, "timeSec");
            return (Criteria) this;
        }

        public Criteria andTimeSecNotIn(List<Integer> values) {
            addCriterion("time_sec not in", values, "timeSec");
            return (Criteria) this;
        }

        public Criteria andTimeSecBetween(Integer value1, Integer value2) {
            addCriterion("time_sec between", value1, value2, "timeSec");
            return (Criteria) this;
        }

        public Criteria andTimeSecNotBetween(Integer value1, Integer value2) {
            addCriterion("time_sec not between", value1, value2, "timeSec");
            return (Criteria) this;
        }

        public Criteria andNumAllPIsNull() {
            addCriterion("num_all_p is null");
            return (Criteria) this;
        }

        public Criteria andNumAllPIsNotNull() {
            addCriterion("num_all_p is not null");
            return (Criteria) this;
        }

        public Criteria andNumAllPEqualTo(Integer value) {
            addCriterion("num_all_p =", value, "numAllP");
            return (Criteria) this;
        }

        public Criteria andNumAllPNotEqualTo(Integer value) {
            addCriterion("num_all_p <>", value, "numAllP");
            return (Criteria) this;
        }

        public Criteria andNumAllPGreaterThan(Integer value) {
            addCriterion("num_all_p >", value, "numAllP");
            return (Criteria) this;
        }

        public Criteria andNumAllPGreaterThanOrEqualTo(Integer value) {
            addCriterion("num_all_p >=", value, "numAllP");
            return (Criteria) this;
        }

        public Criteria andNumAllPLessThan(Integer value) {
            addCriterion("num_all_p <", value, "numAllP");
            return (Criteria) this;
        }

        public Criteria andNumAllPLessThanOrEqualTo(Integer value) {
            addCriterion("num_all_p <=", value, "numAllP");
            return (Criteria) this;
        }

        public Criteria andNumAllPIn(List<Integer> values) {
            addCriterion("num_all_p in", values, "numAllP");
            return (Criteria) this;
        }

        public Criteria andNumAllPNotIn(List<Integer> values) {
            addCriterion("num_all_p not in", values, "numAllP");
            return (Criteria) this;
        }

        public Criteria andNumAllPBetween(Integer value1, Integer value2) {
            addCriterion("num_all_p between", value1, value2, "numAllP");
            return (Criteria) this;
        }

        public Criteria andNumAllPNotBetween(Integer value1, Integer value2) {
            addCriterion("num_all_p not between", value1, value2, "numAllP");
            return (Criteria) this;
        }

        public Criteria andNumRightPIsNull() {
            addCriterion("num_right_p is null");
            return (Criteria) this;
        }

        public Criteria andNumRightPIsNotNull() {
            addCriterion("num_right_p is not null");
            return (Criteria) this;
        }

        public Criteria andNumRightPEqualTo(Integer value) {
            addCriterion("num_right_p =", value, "numRightP");
            return (Criteria) this;
        }

        public Criteria andNumRightPNotEqualTo(Integer value) {
            addCriterion("num_right_p <>", value, "numRightP");
            return (Criteria) this;
        }

        public Criteria andNumRightPGreaterThan(Integer value) {
            addCriterion("num_right_p >", value, "numRightP");
            return (Criteria) this;
        }

        public Criteria andNumRightPGreaterThanOrEqualTo(Integer value) {
            addCriterion("num_right_p >=", value, "numRightP");
            return (Criteria) this;
        }

        public Criteria andNumRightPLessThan(Integer value) {
            addCriterion("num_right_p <", value, "numRightP");
            return (Criteria) this;
        }

        public Criteria andNumRightPLessThanOrEqualTo(Integer value) {
            addCriterion("num_right_p <=", value, "numRightP");
            return (Criteria) this;
        }

        public Criteria andNumRightPIn(List<Integer> values) {
            addCriterion("num_right_p in", values, "numRightP");
            return (Criteria) this;
        }

        public Criteria andNumRightPNotIn(List<Integer> values) {
            addCriterion("num_right_p not in", values, "numRightP");
            return (Criteria) this;
        }

        public Criteria andNumRightPBetween(Integer value1, Integer value2) {
            addCriterion("num_right_p between", value1, value2, "numRightP");
            return (Criteria) this;
        }

        public Criteria andNumRightPNotBetween(Integer value1, Integer value2) {
            addCriterion("num_right_p not between", value1, value2, "numRightP");
            return (Criteria) this;
        }

        public Criteria andNumCapacityAllIsNull() {
            addCriterion("num_capacity_all is null");
            return (Criteria) this;
        }

        public Criteria andNumCapacityAllIsNotNull() {
            addCriterion("num_capacity_all is not null");
            return (Criteria) this;
        }

        public Criteria andNumCapacityAllEqualTo(Integer value) {
            addCriterion("num_capacity_all =", value, "numCapacityAll");
            return (Criteria) this;
        }

        public Criteria andNumCapacityAllNotEqualTo(Integer value) {
            addCriterion("num_capacity_all <>", value, "numCapacityAll");
            return (Criteria) this;
        }

        public Criteria andNumCapacityAllGreaterThan(Integer value) {
            addCriterion("num_capacity_all >", value, "numCapacityAll");
            return (Criteria) this;
        }

        public Criteria andNumCapacityAllGreaterThanOrEqualTo(Integer value) {
            addCriterion("num_capacity_all >=", value, "numCapacityAll");
            return (Criteria) this;
        }

        public Criteria andNumCapacityAllLessThan(Integer value) {
            addCriterion("num_capacity_all <", value, "numCapacityAll");
            return (Criteria) this;
        }

        public Criteria andNumCapacityAllLessThanOrEqualTo(Integer value) {
            addCriterion("num_capacity_all <=", value, "numCapacityAll");
            return (Criteria) this;
        }

        public Criteria andNumCapacityAllIn(List<Integer> values) {
            addCriterion("num_capacity_all in", values, "numCapacityAll");
            return (Criteria) this;
        }

        public Criteria andNumCapacityAllNotIn(List<Integer> values) {
            addCriterion("num_capacity_all not in", values, "numCapacityAll");
            return (Criteria) this;
        }

        public Criteria andNumCapacityAllBetween(Integer value1, Integer value2) {
            addCriterion("num_capacity_all between", value1, value2, "numCapacityAll");
            return (Criteria) this;
        }

        public Criteria andNumCapacityAllNotBetween(Integer value1, Integer value2) {
            addCriterion("num_capacity_all not between", value1, value2, "numCapacityAll");
            return (Criteria) this;
        }

        public Criteria andNumCapacityRightIsNull() {
            addCriterion("num_capacity_right is null");
            return (Criteria) this;
        }

        public Criteria andNumCapacityRightIsNotNull() {
            addCriterion("num_capacity_right is not null");
            return (Criteria) this;
        }

        public Criteria andNumCapacityRightEqualTo(Integer value) {
            addCriterion("num_capacity_right =", value, "numCapacityRight");
            return (Criteria) this;
        }

        public Criteria andNumCapacityRightNotEqualTo(Integer value) {
            addCriterion("num_capacity_right <>", value, "numCapacityRight");
            return (Criteria) this;
        }

        public Criteria andNumCapacityRightGreaterThan(Integer value) {
            addCriterion("num_capacity_right >", value, "numCapacityRight");
            return (Criteria) this;
        }

        public Criteria andNumCapacityRightGreaterThanOrEqualTo(Integer value) {
            addCriterion("num_capacity_right >=", value, "numCapacityRight");
            return (Criteria) this;
        }

        public Criteria andNumCapacityRightLessThan(Integer value) {
            addCriterion("num_capacity_right <", value, "numCapacityRight");
            return (Criteria) this;
        }

        public Criteria andNumCapacityRightLessThanOrEqualTo(Integer value) {
            addCriterion("num_capacity_right <=", value, "numCapacityRight");
            return (Criteria) this;
        }

        public Criteria andNumCapacityRightIn(List<Integer> values) {
            addCriterion("num_capacity_right in", values, "numCapacityRight");
            return (Criteria) this;
        }

        public Criteria andNumCapacityRightNotIn(List<Integer> values) {
            addCriterion("num_capacity_right not in", values, "numCapacityRight");
            return (Criteria) this;
        }

        public Criteria andNumCapacityRightBetween(Integer value1, Integer value2) {
            addCriterion("num_capacity_right between", value1, value2, "numCapacityRight");
            return (Criteria) this;
        }

        public Criteria andNumCapacityRightNotBetween(Integer value1, Integer value2) {
            addCriterion("num_capacity_right not between", value1, value2, "numCapacityRight");
            return (Criteria) this;
        }

        public Criteria andLevelCapacityIsNull() {
            addCriterion("level_capacity is null");
            return (Criteria) this;
        }

        public Criteria andLevelCapacityIsNotNull() {
            addCriterion("level_capacity is not null");
            return (Criteria) this;
        }

        public Criteria andLevelCapacityEqualTo(BigDecimal value) {
            addCriterion("level_capacity =", value, "levelCapacity");
            return (Criteria) this;
        }

        public Criteria andLevelCapacityNotEqualTo(BigDecimal value) {
            addCriterion("level_capacity <>", value, "levelCapacity");
            return (Criteria) this;
        }

        public Criteria andLevelCapacityGreaterThan(BigDecimal value) {
            addCriterion("level_capacity >", value, "levelCapacity");
            return (Criteria) this;
        }

        public Criteria andLevelCapacityGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("level_capacity >=", value, "levelCapacity");
            return (Criteria) this;
        }

        public Criteria andLevelCapacityLessThan(BigDecimal value) {
            addCriterion("level_capacity <", value, "levelCapacity");
            return (Criteria) this;
        }

        public Criteria andLevelCapacityLessThanOrEqualTo(BigDecimal value) {
            addCriterion("level_capacity <=", value, "levelCapacity");
            return (Criteria) this;
        }

        public Criteria andLevelCapacityIn(List<BigDecimal> values) {
            addCriterion("level_capacity in", values, "levelCapacity");
            return (Criteria) this;
        }

        public Criteria andLevelCapacityNotIn(List<BigDecimal> values) {
            addCriterion("level_capacity not in", values, "levelCapacity");
            return (Criteria) this;
        }

        public Criteria andLevelCapacityBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("level_capacity between", value1, value2, "levelCapacity");
            return (Criteria) this;
        }

        public Criteria andLevelCapacityNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("level_capacity not between", value1, value2, "levelCapacity");
            return (Criteria) this;
        }

        public Criteria andTimeEvaluationIsNull() {
            addCriterion("time_evaluation is null");
            return (Criteria) this;
        }

        public Criteria andTimeEvaluationIsNotNull() {
            addCriterion("time_evaluation is not null");
            return (Criteria) this;
        }

        public Criteria andTimeEvaluationEqualTo(Date value) {
            addCriterion("time_evaluation =", value, "timeEvaluation");
            return (Criteria) this;
        }

        public Criteria andTimeEvaluationNotEqualTo(Date value) {
            addCriterion("time_evaluation <>", value, "timeEvaluation");
            return (Criteria) this;
        }

        public Criteria andTimeEvaluationGreaterThan(Date value) {
            addCriterion("time_evaluation >", value, "timeEvaluation");
            return (Criteria) this;
        }

        public Criteria andTimeEvaluationGreaterThanOrEqualTo(Date value) {
            addCriterion("time_evaluation >=", value, "timeEvaluation");
            return (Criteria) this;
        }

        public Criteria andTimeEvaluationLessThan(Date value) {
            addCriterion("time_evaluation <", value, "timeEvaluation");
            return (Criteria) this;
        }

        public Criteria andTimeEvaluationLessThanOrEqualTo(Date value) {
            addCriterion("time_evaluation <=", value, "timeEvaluation");
            return (Criteria) this;
        }

        public Criteria andTimeEvaluationIn(List<Date> values) {
            addCriterion("time_evaluation in", values, "timeEvaluation");
            return (Criteria) this;
        }

        public Criteria andTimeEvaluationNotIn(List<Date> values) {
            addCriterion("time_evaluation not in", values, "timeEvaluation");
            return (Criteria) this;
        }

        public Criteria andTimeEvaluationBetween(Date value1, Date value2) {
            addCriterion("time_evaluation between", value1, value2, "timeEvaluation");
            return (Criteria) this;
        }

        public Criteria andTimeEvaluationNotBetween(Date value1, Date value2) {
            addCriterion("time_evaluation not between", value1, value2, "timeEvaluation");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateIsNull() {
            addCriterion("time_update is null");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateIsNotNull() {
            addCriterion("time_update is not null");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateEqualTo(Date value) {
            addCriterion("time_update =", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateNotEqualTo(Date value) {
            addCriterion("time_update <>", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateGreaterThan(Date value) {
            addCriterion("time_update >", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateGreaterThanOrEqualTo(Date value) {
            addCriterion("time_update >=", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateLessThan(Date value) {
            addCriterion("time_update <", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateLessThanOrEqualTo(Date value) {
            addCriterion("time_update <=", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateIn(List<Date> values) {
            addCriterion("time_update in", values, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateNotIn(List<Date> values) {
            addCriterion("time_update not in", values, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateBetween(Date value1, Date value2) {
            addCriterion("time_update between", value1, value2, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateNotBetween(Date value1, Date value2) {
            addCriterion("time_update not between", value1, value2, "timeUpdate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rep_stu_score
     *
     * @mbggenerated do_not_delete_during_merge Tue Jun 21 00:00:04 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rep_stu_score
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}
package com.qinjiangbo.gen.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class QuePaperQueExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table que_paper_que
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table que_paper_que
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table que_paper_que
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table que_paper_que
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public QuePaperQueExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table que_paper_que
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table que_paper_que
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table que_paper_que
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table que_paper_que
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table que_paper_que
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table que_paper_que
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table que_paper_que
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table que_paper_que
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table que_paper_que
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table que_paper_que
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table que_paper_que
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andQidIsNull() {
            addCriterion("qid is null");
            return (Criteria) this;
        }

        public Criteria andQidIsNotNull() {
            addCriterion("qid is not null");
            return (Criteria) this;
        }

        public Criteria andQidEqualTo(Long value) {
            addCriterion("qid =", value, "qid");
            return (Criteria) this;
        }

        public Criteria andQidNotEqualTo(Long value) {
            addCriterion("qid <>", value, "qid");
            return (Criteria) this;
        }

        public Criteria andQidGreaterThan(Long value) {
            addCriterion("qid >", value, "qid");
            return (Criteria) this;
        }

        public Criteria andQidGreaterThanOrEqualTo(Long value) {
            addCriterion("qid >=", value, "qid");
            return (Criteria) this;
        }

        public Criteria andQidLessThan(Long value) {
            addCriterion("qid <", value, "qid");
            return (Criteria) this;
        }

        public Criteria andQidLessThanOrEqualTo(Long value) {
            addCriterion("qid <=", value, "qid");
            return (Criteria) this;
        }

        public Criteria andQidIn(List<Long> values) {
            addCriterion("qid in", values, "qid");
            return (Criteria) this;
        }

        public Criteria andQidNotIn(List<Long> values) {
            addCriterion("qid not in", values, "qid");
            return (Criteria) this;
        }

        public Criteria andQidBetween(Long value1, Long value2) {
            addCriterion("qid between", value1, value2, "qid");
            return (Criteria) this;
        }

        public Criteria andQidNotBetween(Long value1, Long value2) {
            addCriterion("qid not between", value1, value2, "qid");
            return (Criteria) this;
        }

        public Criteria andPapIdIsNull() {
            addCriterion("pap_id is null");
            return (Criteria) this;
        }

        public Criteria andPapIdIsNotNull() {
            addCriterion("pap_id is not null");
            return (Criteria) this;
        }

        public Criteria andPapIdEqualTo(Long value) {
            addCriterion("pap_id =", value, "papId");
            return (Criteria) this;
        }

        public Criteria andPapIdNotEqualTo(Long value) {
            addCriterion("pap_id <>", value, "papId");
            return (Criteria) this;
        }

        public Criteria andPapIdGreaterThan(Long value) {
            addCriterion("pap_id >", value, "papId");
            return (Criteria) this;
        }

        public Criteria andPapIdGreaterThanOrEqualTo(Long value) {
            addCriterion("pap_id >=", value, "papId");
            return (Criteria) this;
        }

        public Criteria andPapIdLessThan(Long value) {
            addCriterion("pap_id <", value, "papId");
            return (Criteria) this;
        }

        public Criteria andPapIdLessThanOrEqualTo(Long value) {
            addCriterion("pap_id <=", value, "papId");
            return (Criteria) this;
        }

        public Criteria andPapIdIn(List<Long> values) {
            addCriterion("pap_id in", values, "papId");
            return (Criteria) this;
        }

        public Criteria andPapIdNotIn(List<Long> values) {
            addCriterion("pap_id not in", values, "papId");
            return (Criteria) this;
        }

        public Criteria andPapIdBetween(Long value1, Long value2) {
            addCriterion("pap_id between", value1, value2, "papId");
            return (Criteria) this;
        }

        public Criteria andPapIdNotBetween(Long value1, Long value2) {
            addCriterion("pap_id not between", value1, value2, "papId");
            return (Criteria) this;
        }

        public Criteria andSecIdIsNull() {
            addCriterion("sec_id is null");
            return (Criteria) this;
        }

        public Criteria andSecIdIsNotNull() {
            addCriterion("sec_id is not null");
            return (Criteria) this;
        }

        public Criteria andSecIdEqualTo(Long value) {
            addCriterion("sec_id =", value, "secId");
            return (Criteria) this;
        }

        public Criteria andSecIdNotEqualTo(Long value) {
            addCriterion("sec_id <>", value, "secId");
            return (Criteria) this;
        }

        public Criteria andSecIdGreaterThan(Long value) {
            addCriterion("sec_id >", value, "secId");
            return (Criteria) this;
        }

        public Criteria andSecIdGreaterThanOrEqualTo(Long value) {
            addCriterion("sec_id >=", value, "secId");
            return (Criteria) this;
        }

        public Criteria andSecIdLessThan(Long value) {
            addCriterion("sec_id <", value, "secId");
            return (Criteria) this;
        }

        public Criteria andSecIdLessThanOrEqualTo(Long value) {
            addCriterion("sec_id <=", value, "secId");
            return (Criteria) this;
        }

        public Criteria andSecIdIn(List<Long> values) {
            addCriterion("sec_id in", values, "secId");
            return (Criteria) this;
        }

        public Criteria andSecIdNotIn(List<Long> values) {
            addCriterion("sec_id not in", values, "secId");
            return (Criteria) this;
        }

        public Criteria andSecIdBetween(Long value1, Long value2) {
            addCriterion("sec_id between", value1, value2, "secId");
            return (Criteria) this;
        }

        public Criteria andSecIdNotBetween(Long value1, Long value2) {
            addCriterion("sec_id not between", value1, value2, "secId");
            return (Criteria) this;
        }

        public Criteria andReadIdIsNull() {
            addCriterion("read_id is null");
            return (Criteria) this;
        }

        public Criteria andReadIdIsNotNull() {
            addCriterion("read_id is not null");
            return (Criteria) this;
        }

        public Criteria andReadIdEqualTo(Long value) {
            addCriterion("read_id =", value, "readId");
            return (Criteria) this;
        }

        public Criteria andReadIdNotEqualTo(Long value) {
            addCriterion("read_id <>", value, "readId");
            return (Criteria) this;
        }

        public Criteria andReadIdGreaterThan(Long value) {
            addCriterion("read_id >", value, "readId");
            return (Criteria) this;
        }

        public Criteria andReadIdGreaterThanOrEqualTo(Long value) {
            addCriterion("read_id >=", value, "readId");
            return (Criteria) this;
        }

        public Criteria andReadIdLessThan(Long value) {
            addCriterion("read_id <", value, "readId");
            return (Criteria) this;
        }

        public Criteria andReadIdLessThanOrEqualTo(Long value) {
            addCriterion("read_id <=", value, "readId");
            return (Criteria) this;
        }

        public Criteria andReadIdIn(List<Long> values) {
            addCriterion("read_id in", values, "readId");
            return (Criteria) this;
        }

        public Criteria andReadIdNotIn(List<Long> values) {
            addCriterion("read_id not in", values, "readId");
            return (Criteria) this;
        }

        public Criteria andReadIdBetween(Long value1, Long value2) {
            addCriterion("read_id between", value1, value2, "readId");
            return (Criteria) this;
        }

        public Criteria andReadIdNotBetween(Long value1, Long value2) {
            addCriterion("read_id not between", value1, value2, "readId");
            return (Criteria) this;
        }

        public Criteria andQueIdIsNull() {
            addCriterion("que_id is null");
            return (Criteria) this;
        }

        public Criteria andQueIdIsNotNull() {
            addCriterion("que_id is not null");
            return (Criteria) this;
        }

        public Criteria andQueIdEqualTo(Long value) {
            addCriterion("que_id =", value, "queId");
            return (Criteria) this;
        }

        public Criteria andQueIdNotEqualTo(Long value) {
            addCriterion("que_id <>", value, "queId");
            return (Criteria) this;
        }

        public Criteria andQueIdGreaterThan(Long value) {
            addCriterion("que_id >", value, "queId");
            return (Criteria) this;
        }

        public Criteria andQueIdGreaterThanOrEqualTo(Long value) {
            addCriterion("que_id >=", value, "queId");
            return (Criteria) this;
        }

        public Criteria andQueIdLessThan(Long value) {
            addCriterion("que_id <", value, "queId");
            return (Criteria) this;
        }

        public Criteria andQueIdLessThanOrEqualTo(Long value) {
            addCriterion("que_id <=", value, "queId");
            return (Criteria) this;
        }

        public Criteria andQueIdIn(List<Long> values) {
            addCriterion("que_id in", values, "queId");
            return (Criteria) this;
        }

        public Criteria andQueIdNotIn(List<Long> values) {
            addCriterion("que_id not in", values, "queId");
            return (Criteria) this;
        }

        public Criteria andQueIdBetween(Long value1, Long value2) {
            addCriterion("que_id between", value1, value2, "queId");
            return (Criteria) this;
        }

        public Criteria andQueIdNotBetween(Long value1, Long value2) {
            addCriterion("que_id not between", value1, value2, "queId");
            return (Criteria) this;
        }

        public Criteria andSortReadIsNull() {
            addCriterion("sort_read is null");
            return (Criteria) this;
        }

        public Criteria andSortReadIsNotNull() {
            addCriterion("sort_read is not null");
            return (Criteria) this;
        }

        public Criteria andSortReadEqualTo(Integer value) {
            addCriterion("sort_read =", value, "sortRead");
            return (Criteria) this;
        }

        public Criteria andSortReadNotEqualTo(Integer value) {
            addCriterion("sort_read <>", value, "sortRead");
            return (Criteria) this;
        }

        public Criteria andSortReadGreaterThan(Integer value) {
            addCriterion("sort_read >", value, "sortRead");
            return (Criteria) this;
        }

        public Criteria andSortReadGreaterThanOrEqualTo(Integer value) {
            addCriterion("sort_read >=", value, "sortRead");
            return (Criteria) this;
        }

        public Criteria andSortReadLessThan(Integer value) {
            addCriterion("sort_read <", value, "sortRead");
            return (Criteria) this;
        }

        public Criteria andSortReadLessThanOrEqualTo(Integer value) {
            addCriterion("sort_read <=", value, "sortRead");
            return (Criteria) this;
        }

        public Criteria andSortReadIn(List<Integer> values) {
            addCriterion("sort_read in", values, "sortRead");
            return (Criteria) this;
        }

        public Criteria andSortReadNotIn(List<Integer> values) {
            addCriterion("sort_read not in", values, "sortRead");
            return (Criteria) this;
        }

        public Criteria andSortReadBetween(Integer value1, Integer value2) {
            addCriterion("sort_read between", value1, value2, "sortRead");
            return (Criteria) this;
        }

        public Criteria andSortReadNotBetween(Integer value1, Integer value2) {
            addCriterion("sort_read not between", value1, value2, "sortRead");
            return (Criteria) this;
        }

        public Criteria andSortSecIsNull() {
            addCriterion("sort_sec is null");
            return (Criteria) this;
        }

        public Criteria andSortSecIsNotNull() {
            addCriterion("sort_sec is not null");
            return (Criteria) this;
        }

        public Criteria andSortSecEqualTo(Integer value) {
            addCriterion("sort_sec =", value, "sortSec");
            return (Criteria) this;
        }

        public Criteria andSortSecNotEqualTo(Integer value) {
            addCriterion("sort_sec <>", value, "sortSec");
            return (Criteria) this;
        }

        public Criteria andSortSecGreaterThan(Integer value) {
            addCriterion("sort_sec >", value, "sortSec");
            return (Criteria) this;
        }

        public Criteria andSortSecGreaterThanOrEqualTo(Integer value) {
            addCriterion("sort_sec >=", value, "sortSec");
            return (Criteria) this;
        }

        public Criteria andSortSecLessThan(Integer value) {
            addCriterion("sort_sec <", value, "sortSec");
            return (Criteria) this;
        }

        public Criteria andSortSecLessThanOrEqualTo(Integer value) {
            addCriterion("sort_sec <=", value, "sortSec");
            return (Criteria) this;
        }

        public Criteria andSortSecIn(List<Integer> values) {
            addCriterion("sort_sec in", values, "sortSec");
            return (Criteria) this;
        }

        public Criteria andSortSecNotIn(List<Integer> values) {
            addCriterion("sort_sec not in", values, "sortSec");
            return (Criteria) this;
        }

        public Criteria andSortSecBetween(Integer value1, Integer value2) {
            addCriterion("sort_sec between", value1, value2, "sortSec");
            return (Criteria) this;
        }

        public Criteria andSortSecNotBetween(Integer value1, Integer value2) {
            addCriterion("sort_sec not between", value1, value2, "sortSec");
            return (Criteria) this;
        }

        public Criteria andSortPapIsNull() {
            addCriterion("sort_pap is null");
            return (Criteria) this;
        }

        public Criteria andSortPapIsNotNull() {
            addCriterion("sort_pap is not null");
            return (Criteria) this;
        }

        public Criteria andSortPapEqualTo(Integer value) {
            addCriterion("sort_pap =", value, "sortPap");
            return (Criteria) this;
        }

        public Criteria andSortPapNotEqualTo(Integer value) {
            addCriterion("sort_pap <>", value, "sortPap");
            return (Criteria) this;
        }

        public Criteria andSortPapGreaterThan(Integer value) {
            addCriterion("sort_pap >", value, "sortPap");
            return (Criteria) this;
        }

        public Criteria andSortPapGreaterThanOrEqualTo(Integer value) {
            addCriterion("sort_pap >=", value, "sortPap");
            return (Criteria) this;
        }

        public Criteria andSortPapLessThan(Integer value) {
            addCriterion("sort_pap <", value, "sortPap");
            return (Criteria) this;
        }

        public Criteria andSortPapLessThanOrEqualTo(Integer value) {
            addCriterion("sort_pap <=", value, "sortPap");
            return (Criteria) this;
        }

        public Criteria andSortPapIn(List<Integer> values) {
            addCriterion("sort_pap in", values, "sortPap");
            return (Criteria) this;
        }

        public Criteria andSortPapNotIn(List<Integer> values) {
            addCriterion("sort_pap not in", values, "sortPap");
            return (Criteria) this;
        }

        public Criteria andSortPapBetween(Integer value1, Integer value2) {
            addCriterion("sort_pap between", value1, value2, "sortPap");
            return (Criteria) this;
        }

        public Criteria andSortPapNotBetween(Integer value1, Integer value2) {
            addCriterion("sort_pap not between", value1, value2, "sortPap");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateIsNull() {
            addCriterion("time_update is null");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateIsNotNull() {
            addCriterion("time_update is not null");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateEqualTo(Date value) {
            addCriterion("time_update =", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateNotEqualTo(Date value) {
            addCriterion("time_update <>", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateGreaterThan(Date value) {
            addCriterion("time_update >", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateGreaterThanOrEqualTo(Date value) {
            addCriterion("time_update >=", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateLessThan(Date value) {
            addCriterion("time_update <", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateLessThanOrEqualTo(Date value) {
            addCriterion("time_update <=", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateIn(List<Date> values) {
            addCriterion("time_update in", values, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateNotIn(List<Date> values) {
            addCriterion("time_update not in", values, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateBetween(Date value1, Date value2) {
            addCriterion("time_update between", value1, value2, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateNotBetween(Date value1, Date value2) {
            addCriterion("time_update not between", value1, value2, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andIsFirstIsNull() {
            addCriterion("is_first is null");
            return (Criteria) this;
        }

        public Criteria andIsFirstIsNotNull() {
            addCriterion("is_first is not null");
            return (Criteria) this;
        }

        public Criteria andIsFirstEqualTo(Long value) {
            addCriterion("is_first =", value, "isFirst");
            return (Criteria) this;
        }

        public Criteria andIsFirstNotEqualTo(Long value) {
            addCriterion("is_first <>", value, "isFirst");
            return (Criteria) this;
        }

        public Criteria andIsFirstGreaterThan(Long value) {
            addCriterion("is_first >", value, "isFirst");
            return (Criteria) this;
        }

        public Criteria andIsFirstGreaterThanOrEqualTo(Long value) {
            addCriterion("is_first >=", value, "isFirst");
            return (Criteria) this;
        }

        public Criteria andIsFirstLessThan(Long value) {
            addCriterion("is_first <", value, "isFirst");
            return (Criteria) this;
        }

        public Criteria andIsFirstLessThanOrEqualTo(Long value) {
            addCriterion("is_first <=", value, "isFirst");
            return (Criteria) this;
        }

        public Criteria andIsFirstIn(List<Long> values) {
            addCriterion("is_first in", values, "isFirst");
            return (Criteria) this;
        }

        public Criteria andIsFirstNotIn(List<Long> values) {
            addCriterion("is_first not in", values, "isFirst");
            return (Criteria) this;
        }

        public Criteria andIsFirstBetween(Long value1, Long value2) {
            addCriterion("is_first between", value1, value2, "isFirst");
            return (Criteria) this;
        }

        public Criteria andIsFirstNotBetween(Long value1, Long value2) {
            addCriterion("is_first not between", value1, value2, "isFirst");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table que_paper_que
     *
     * @mbggenerated do_not_delete_during_merge Tue Jun 21 00:00:04 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table que_paper_que
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}
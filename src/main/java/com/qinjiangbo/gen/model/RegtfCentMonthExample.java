package com.qinjiangbo.gen.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class RegtfCentMonthExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table regtf_cent_month
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table regtf_cent_month
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table regtf_cent_month
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regtf_cent_month
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public RegtfCentMonthExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regtf_cent_month
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regtf_cent_month
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regtf_cent_month
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regtf_cent_month
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regtf_cent_month
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regtf_cent_month
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regtf_cent_month
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regtf_cent_month
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regtf_cent_month
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table regtf_cent_month
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table regtf_cent_month
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTestMonthIsNull() {
            addCriterion("test_month is null");
            return (Criteria) this;
        }

        public Criteria andTestMonthIsNotNull() {
            addCriterion("test_month is not null");
            return (Criteria) this;
        }

        public Criteria andTestMonthEqualTo(Long value) {
            addCriterion("test_month =", value, "testMonth");
            return (Criteria) this;
        }

        public Criteria andTestMonthNotEqualTo(Long value) {
            addCriterion("test_month <>", value, "testMonth");
            return (Criteria) this;
        }

        public Criteria andTestMonthGreaterThan(Long value) {
            addCriterion("test_month >", value, "testMonth");
            return (Criteria) this;
        }

        public Criteria andTestMonthGreaterThanOrEqualTo(Long value) {
            addCriterion("test_month >=", value, "testMonth");
            return (Criteria) this;
        }

        public Criteria andTestMonthLessThan(Long value) {
            addCriterion("test_month <", value, "testMonth");
            return (Criteria) this;
        }

        public Criteria andTestMonthLessThanOrEqualTo(Long value) {
            addCriterion("test_month <=", value, "testMonth");
            return (Criteria) this;
        }

        public Criteria andTestMonthIn(List<Long> values) {
            addCriterion("test_month in", values, "testMonth");
            return (Criteria) this;
        }

        public Criteria andTestMonthNotIn(List<Long> values) {
            addCriterion("test_month not in", values, "testMonth");
            return (Criteria) this;
        }

        public Criteria andTestMonthBetween(Long value1, Long value2) {
            addCriterion("test_month between", value1, value2, "testMonth");
            return (Criteria) this;
        }

        public Criteria andTestMonthNotBetween(Long value1, Long value2) {
            addCriterion("test_month not between", value1, value2, "testMonth");
            return (Criteria) this;
        }

        public Criteria andRegProvinIsNull() {
            addCriterion("reg_provin is null");
            return (Criteria) this;
        }

        public Criteria andRegProvinIsNotNull() {
            addCriterion("reg_provin is not null");
            return (Criteria) this;
        }

        public Criteria andRegProvinEqualTo(Long value) {
            addCriterion("reg_provin =", value, "regProvin");
            return (Criteria) this;
        }

        public Criteria andRegProvinNotEqualTo(Long value) {
            addCriterion("reg_provin <>", value, "regProvin");
            return (Criteria) this;
        }

        public Criteria andRegProvinGreaterThan(Long value) {
            addCriterion("reg_provin >", value, "regProvin");
            return (Criteria) this;
        }

        public Criteria andRegProvinGreaterThanOrEqualTo(Long value) {
            addCriterion("reg_provin >=", value, "regProvin");
            return (Criteria) this;
        }

        public Criteria andRegProvinLessThan(Long value) {
            addCriterion("reg_provin <", value, "regProvin");
            return (Criteria) this;
        }

        public Criteria andRegProvinLessThanOrEqualTo(Long value) {
            addCriterion("reg_provin <=", value, "regProvin");
            return (Criteria) this;
        }

        public Criteria andRegProvinIn(List<Long> values) {
            addCriterion("reg_provin in", values, "regProvin");
            return (Criteria) this;
        }

        public Criteria andRegProvinNotIn(List<Long> values) {
            addCriterion("reg_provin not in", values, "regProvin");
            return (Criteria) this;
        }

        public Criteria andRegProvinBetween(Long value1, Long value2) {
            addCriterion("reg_provin between", value1, value2, "regProvin");
            return (Criteria) this;
        }

        public Criteria andRegProvinNotBetween(Long value1, Long value2) {
            addCriterion("reg_provin not between", value1, value2, "regProvin");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andNumIsNull() {
            addCriterion("num is null");
            return (Criteria) this;
        }

        public Criteria andNumIsNotNull() {
            addCriterion("num is not null");
            return (Criteria) this;
        }

        public Criteria andNumEqualTo(Integer value) {
            addCriterion("num =", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumNotEqualTo(Integer value) {
            addCriterion("num <>", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumGreaterThan(Integer value) {
            addCriterion("num >", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("num >=", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumLessThan(Integer value) {
            addCriterion("num <", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumLessThanOrEqualTo(Integer value) {
            addCriterion("num <=", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumIn(List<Integer> values) {
            addCriterion("num in", values, "num");
            return (Criteria) this;
        }

        public Criteria andNumNotIn(List<Integer> values) {
            addCriterion("num not in", values, "num");
            return (Criteria) this;
        }

        public Criteria andNumBetween(Integer value1, Integer value2) {
            addCriterion("num between", value1, value2, "num");
            return (Criteria) this;
        }

        public Criteria andNumNotBetween(Integer value1, Integer value2) {
            addCriterion("num not between", value1, value2, "num");
            return (Criteria) this;
        }

        public Criteria andTimeStartIsNull() {
            addCriterion("time_start is null");
            return (Criteria) this;
        }

        public Criteria andTimeStartIsNotNull() {
            addCriterion("time_start is not null");
            return (Criteria) this;
        }

        public Criteria andTimeStartEqualTo(Date value) {
            addCriterion("time_start =", value, "timeStart");
            return (Criteria) this;
        }

        public Criteria andTimeStartNotEqualTo(Date value) {
            addCriterion("time_start <>", value, "timeStart");
            return (Criteria) this;
        }

        public Criteria andTimeStartGreaterThan(Date value) {
            addCriterion("time_start >", value, "timeStart");
            return (Criteria) this;
        }

        public Criteria andTimeStartGreaterThanOrEqualTo(Date value) {
            addCriterion("time_start >=", value, "timeStart");
            return (Criteria) this;
        }

        public Criteria andTimeStartLessThan(Date value) {
            addCriterion("time_start <", value, "timeStart");
            return (Criteria) this;
        }

        public Criteria andTimeStartLessThanOrEqualTo(Date value) {
            addCriterion("time_start <=", value, "timeStart");
            return (Criteria) this;
        }

        public Criteria andTimeStartIn(List<Date> values) {
            addCriterion("time_start in", values, "timeStart");
            return (Criteria) this;
        }

        public Criteria andTimeStartNotIn(List<Date> values) {
            addCriterion("time_start not in", values, "timeStart");
            return (Criteria) this;
        }

        public Criteria andTimeStartBetween(Date value1, Date value2) {
            addCriterion("time_start between", value1, value2, "timeStart");
            return (Criteria) this;
        }

        public Criteria andTimeStartNotBetween(Date value1, Date value2) {
            addCriterion("time_start not between", value1, value2, "timeStart");
            return (Criteria) this;
        }

        public Criteria andTimeSuccessIsNull() {
            addCriterion("time_success is null");
            return (Criteria) this;
        }

        public Criteria andTimeSuccessIsNotNull() {
            addCriterion("time_success is not null");
            return (Criteria) this;
        }

        public Criteria andTimeSuccessEqualTo(Date value) {
            addCriterion("time_success =", value, "timeSuccess");
            return (Criteria) this;
        }

        public Criteria andTimeSuccessNotEqualTo(Date value) {
            addCriterion("time_success <>", value, "timeSuccess");
            return (Criteria) this;
        }

        public Criteria andTimeSuccessGreaterThan(Date value) {
            addCriterion("time_success >", value, "timeSuccess");
            return (Criteria) this;
        }

        public Criteria andTimeSuccessGreaterThanOrEqualTo(Date value) {
            addCriterion("time_success >=", value, "timeSuccess");
            return (Criteria) this;
        }

        public Criteria andTimeSuccessLessThan(Date value) {
            addCriterion("time_success <", value, "timeSuccess");
            return (Criteria) this;
        }

        public Criteria andTimeSuccessLessThanOrEqualTo(Date value) {
            addCriterion("time_success <=", value, "timeSuccess");
            return (Criteria) this;
        }

        public Criteria andTimeSuccessIn(List<Date> values) {
            addCriterion("time_success in", values, "timeSuccess");
            return (Criteria) this;
        }

        public Criteria andTimeSuccessNotIn(List<Date> values) {
            addCriterion("time_success not in", values, "timeSuccess");
            return (Criteria) this;
        }

        public Criteria andTimeSuccessBetween(Date value1, Date value2) {
            addCriterion("time_success between", value1, value2, "timeSuccess");
            return (Criteria) this;
        }

        public Criteria andTimeSuccessNotBetween(Date value1, Date value2) {
            addCriterion("time_success not between", value1, value2, "timeSuccess");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table regtf_cent_month
     *
     * @mbggenerated do_not_delete_during_merge Tue Jun 21 00:00:04 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table regtf_cent_month
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}
package com.qinjiangbo.gen.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class RepStuLearningExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rep_stu_learning
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rep_stu_learning
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table rep_stu_learning
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rep_stu_learning
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public RepStuLearningExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rep_stu_learning
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rep_stu_learning
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rep_stu_learning
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rep_stu_learning
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rep_stu_learning
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rep_stu_learning
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rep_stu_learning
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rep_stu_learning
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rep_stu_learning
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table rep_stu_learning
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rep_stu_learning
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Long value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Long value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Long value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Long value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Long value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Long> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Long> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Long value1, Long value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Long value1, Long value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andDateLearnIsNull() {
            addCriterion("date_learn is null");
            return (Criteria) this;
        }

        public Criteria andDateLearnIsNotNull() {
            addCriterion("date_learn is not null");
            return (Criteria) this;
        }

        public Criteria andDateLearnEqualTo(Date value) {
            addCriterionForJDBCDate("date_learn =", value, "dateLearn");
            return (Criteria) this;
        }

        public Criteria andDateLearnNotEqualTo(Date value) {
            addCriterionForJDBCDate("date_learn <>", value, "dateLearn");
            return (Criteria) this;
        }

        public Criteria andDateLearnGreaterThan(Date value) {
            addCriterionForJDBCDate("date_learn >", value, "dateLearn");
            return (Criteria) this;
        }

        public Criteria andDateLearnGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("date_learn >=", value, "dateLearn");
            return (Criteria) this;
        }

        public Criteria andDateLearnLessThan(Date value) {
            addCriterionForJDBCDate("date_learn <", value, "dateLearn");
            return (Criteria) this;
        }

        public Criteria andDateLearnLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("date_learn <=", value, "dateLearn");
            return (Criteria) this;
        }

        public Criteria andDateLearnIn(List<Date> values) {
            addCriterionForJDBCDate("date_learn in", values, "dateLearn");
            return (Criteria) this;
        }

        public Criteria andDateLearnNotIn(List<Date> values) {
            addCriterionForJDBCDate("date_learn not in", values, "dateLearn");
            return (Criteria) this;
        }

        public Criteria andDateLearnBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("date_learn between", value1, value2, "dateLearn");
            return (Criteria) this;
        }

        public Criteria andDateLearnNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("date_learn not between", value1, value2, "dateLearn");
            return (Criteria) this;
        }

        public Criteria andTimeLearnIsNull() {
            addCriterion("time_learn is null");
            return (Criteria) this;
        }

        public Criteria andTimeLearnIsNotNull() {
            addCriterion("time_learn is not null");
            return (Criteria) this;
        }

        public Criteria andTimeLearnEqualTo(Integer value) {
            addCriterion("time_learn =", value, "timeLearn");
            return (Criteria) this;
        }

        public Criteria andTimeLearnNotEqualTo(Integer value) {
            addCriterion("time_learn <>", value, "timeLearn");
            return (Criteria) this;
        }

        public Criteria andTimeLearnGreaterThan(Integer value) {
            addCriterion("time_learn >", value, "timeLearn");
            return (Criteria) this;
        }

        public Criteria andTimeLearnGreaterThanOrEqualTo(Integer value) {
            addCriterion("time_learn >=", value, "timeLearn");
            return (Criteria) this;
        }

        public Criteria andTimeLearnLessThan(Integer value) {
            addCriterion("time_learn <", value, "timeLearn");
            return (Criteria) this;
        }

        public Criteria andTimeLearnLessThanOrEqualTo(Integer value) {
            addCriterion("time_learn <=", value, "timeLearn");
            return (Criteria) this;
        }

        public Criteria andTimeLearnIn(List<Integer> values) {
            addCriterion("time_learn in", values, "timeLearn");
            return (Criteria) this;
        }

        public Criteria andTimeLearnNotIn(List<Integer> values) {
            addCriterion("time_learn not in", values, "timeLearn");
            return (Criteria) this;
        }

        public Criteria andTimeLearnBetween(Integer value1, Integer value2) {
            addCriterion("time_learn between", value1, value2, "timeLearn");
            return (Criteria) this;
        }

        public Criteria andTimeLearnNotBetween(Integer value1, Integer value2) {
            addCriterion("time_learn not between", value1, value2, "timeLearn");
            return (Criteria) this;
        }

        public Criteria andTimeLoginIsNull() {
            addCriterion("time_login is null");
            return (Criteria) this;
        }

        public Criteria andTimeLoginIsNotNull() {
            addCriterion("time_login is not null");
            return (Criteria) this;
        }

        public Criteria andTimeLoginEqualTo(Date value) {
            addCriterion("time_login =", value, "timeLogin");
            return (Criteria) this;
        }

        public Criteria andTimeLoginNotEqualTo(Date value) {
            addCriterion("time_login <>", value, "timeLogin");
            return (Criteria) this;
        }

        public Criteria andTimeLoginGreaterThan(Date value) {
            addCriterion("time_login >", value, "timeLogin");
            return (Criteria) this;
        }

        public Criteria andTimeLoginGreaterThanOrEqualTo(Date value) {
            addCriterion("time_login >=", value, "timeLogin");
            return (Criteria) this;
        }

        public Criteria andTimeLoginLessThan(Date value) {
            addCriterion("time_login <", value, "timeLogin");
            return (Criteria) this;
        }

        public Criteria andTimeLoginLessThanOrEqualTo(Date value) {
            addCriterion("time_login <=", value, "timeLogin");
            return (Criteria) this;
        }

        public Criteria andTimeLoginIn(List<Date> values) {
            addCriterion("time_login in", values, "timeLogin");
            return (Criteria) this;
        }

        public Criteria andTimeLoginNotIn(List<Date> values) {
            addCriterion("time_login not in", values, "timeLogin");
            return (Criteria) this;
        }

        public Criteria andTimeLoginBetween(Date value1, Date value2) {
            addCriterion("time_login between", value1, value2, "timeLogin");
            return (Criteria) this;
        }

        public Criteria andTimeLoginNotBetween(Date value1, Date value2) {
            addCriterion("time_login not between", value1, value2, "timeLogin");
            return (Criteria) this;
        }

        public Criteria andTimeLogoutIsNull() {
            addCriterion("time_logout is null");
            return (Criteria) this;
        }

        public Criteria andTimeLogoutIsNotNull() {
            addCriterion("time_logout is not null");
            return (Criteria) this;
        }

        public Criteria andTimeLogoutEqualTo(Date value) {
            addCriterion("time_logout =", value, "timeLogout");
            return (Criteria) this;
        }

        public Criteria andTimeLogoutNotEqualTo(Date value) {
            addCriterion("time_logout <>", value, "timeLogout");
            return (Criteria) this;
        }

        public Criteria andTimeLogoutGreaterThan(Date value) {
            addCriterion("time_logout >", value, "timeLogout");
            return (Criteria) this;
        }

        public Criteria andTimeLogoutGreaterThanOrEqualTo(Date value) {
            addCriterion("time_logout >=", value, "timeLogout");
            return (Criteria) this;
        }

        public Criteria andTimeLogoutLessThan(Date value) {
            addCriterion("time_logout <", value, "timeLogout");
            return (Criteria) this;
        }

        public Criteria andTimeLogoutLessThanOrEqualTo(Date value) {
            addCriterion("time_logout <=", value, "timeLogout");
            return (Criteria) this;
        }

        public Criteria andTimeLogoutIn(List<Date> values) {
            addCriterion("time_logout in", values, "timeLogout");
            return (Criteria) this;
        }

        public Criteria andTimeLogoutNotIn(List<Date> values) {
            addCriterion("time_logout not in", values, "timeLogout");
            return (Criteria) this;
        }

        public Criteria andTimeLogoutBetween(Date value1, Date value2) {
            addCriterion("time_logout between", value1, value2, "timeLogout");
            return (Criteria) this;
        }

        public Criteria andTimeLogoutNotBetween(Date value1, Date value2) {
            addCriterion("time_logout not between", value1, value2, "timeLogout");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateIsNull() {
            addCriterion("time_update is null");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateIsNotNull() {
            addCriterion("time_update is not null");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateEqualTo(Date value) {
            addCriterion("time_update =", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateNotEqualTo(Date value) {
            addCriterion("time_update <>", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateGreaterThan(Date value) {
            addCriterion("time_update >", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateGreaterThanOrEqualTo(Date value) {
            addCriterion("time_update >=", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateLessThan(Date value) {
            addCriterion("time_update <", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateLessThanOrEqualTo(Date value) {
            addCriterion("time_update <=", value, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateIn(List<Date> values) {
            addCriterion("time_update in", values, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateNotIn(List<Date> values) {
            addCriterion("time_update not in", values, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateBetween(Date value1, Date value2) {
            addCriterion("time_update between", value1, value2, "timeUpdate");
            return (Criteria) this;
        }

        public Criteria andTimeUpdateNotBetween(Date value1, Date value2) {
            addCriterion("time_update not between", value1, value2, "timeUpdate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rep_stu_learning
     *
     * @mbggenerated do_not_delete_during_merge Tue Jun 21 00:00:04 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table rep_stu_learning
     *
     * @mbggenerated Tue Jun 21 00:00:04 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}